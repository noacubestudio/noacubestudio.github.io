title dis pontibus II remix
homepage by noa, date ver. 03-26-a
background_color #14182e
text_color #ff8933

run_rules_on_level_start
verbose_logging

(CURRENT TODO

• holders that actually work
• test for weird bugs, maybe not allow huge shapes?
• more of the new objects
• sinking animation, same obstacle system for all types? also animate that.
• single "test" object for raft itself -> check collision -> move everything else directly?
• show overlay of shape with borders on collision.

FLOOR
• Rafts
  • Get color from boxes
  • Can sink
  • Players and boxes can't move off them
  • Sunken players can push shapes from the sides, activates their box type
• Walls?
  • On top of shapes
  • Solid, but move with shapes
• Glue
  • ???

BOXES
• Can push multiple in a row?
• Move box
  • whole shape moves
• Rotate box
  • rotate around box 
  • when in holder, gets handle
  • if handle has to be turned, but can't rotate
    still turn handle
• Snake box
  • if snake shape: move in direction
• Shift box
  • moves just a row
  • useful for disconnecting/ splitting/ sinking as well
• Mirror box?
  • mirror in move axis, across box point
• Mistake box (combination)
  • after you pushed multiple boxes into same shape,
  • they all turn into these

OBJECTS
• Holders
  • sometimes with objects in them already
  • grab boxes, so you can have multiple per shape
  • pushing won't move boxes out, but activate them
  • move into goals to empty holders again

GOALS
• all box types)


OBJECTS

(markers)
active
transparent
local
transparent
nosink
transparent
raftdead
transparent

selectedraft
transparent
selecteddone
transparent

boxindiv
transparent
frombox
transparent

lowplayer
transparent

ulookmarker
transparent
dlookmarker
transparent
rlookmarker
transparent
llookmarker
transparent

testraft
transparent
testplayer
transparent
testpush
transparent
testmove
transparent
testrota
transparent
testsnek
transparent
testhstick
transparent
testvstick
transparent
testglue
transparent
testwall
transparent
testholder
transparent


(ROTATE)
rotate
transparent
norotate
transparent

rcan
transparent
lcan
transparent
ucan
transparent
dcan
transparent
center
transparent
clockdir
transparent
counterdir
transparent

uline
transparent
dline
transparent
rline
transparent
lline
transparent

unpicked
transparent
picked
transparent
newtile
transparent
newdone
black
newfill
transparent

un
transparent
rn
transparent
ln
transparent
dn
transparent
ruq
transparent
luq
transparent
rdq
transparent
ldq
transparent

collided
transparent
overlap
transparent

once
transparent
newrun
transparent

dia
transparent
newdia
transparent
udia
transparent
ddia
transparent
rdia
transparent
ldia
transparent

hfind
transparent
vfind
transparent
bfind
transparent

checkhere
transparent
ucheck
transparent
dcheck
transparent
rcheck
transparent
lcheck
transparent
between
transparent

(snake)
snekneck
transparent
snekhead
transparent
snekbody
transparent

vsneksegment
transparent
hsneksegment
transparent

snekold
transparent

(waves)
tide
transparent

hey
red
00000
0...0
0...0
0...0
00000


starter
transparent
pusher
transparent
snaker
transparent

(---------------------------------------------)

background
#2c354d
.....
.0...
.....
...0.
.....

wave
#14182e #2c354d
00000
00010
00000
01000
00000

ripples
#14182e #2c354d
00000
00111
00000
01100
00000

shadow
#14182e

levelbarrier
black

hide
#14182e

(REGULAR RAFT)
raft
#52333f

uraft 
#52333f #8f4d57
.....
.....
.....
00000
11111
lraft
#52333f #8f4d57
...01
...01
...01
...01
...01
draft
#52333f #8f4d57
11111
00000
.....
.....
.....
rraft
#52333f #8f4d57
10...
10...
10...
10...
10...

fillraft
#52333f

ruraft
#3d2936
.....
.....
.....
0....
00...
luraft
#3d2936
.....
.....
.....
....0
...00
rdraft
#3d2936
00...
0....
.....
.....
.....
ldraft
#3d2936
...00
....0
.....
.....
.....

iruraft
#52333f #8f4d57
.....
.....
.....
10...
11...
iluraft
#52333f #8f4d57
.....
.....
.....
...01
...11
irdraft
#52333f #8f4d57
11...
10...
.....
.....
.....
ildraft
#52333f #8f4d57
...11
...01
.....
.....
.....

raftmove
#ab5130

uraftmove 
#ab5130 #cf752b
.....
.....
.....
00000
11111
lraftmove
#ab5130 #cf752b
...01
...01
...01
...01
...01
draftmove
#ab5130 #cf752b
11111
00000
.....
.....
.....
rraftmove
#ab5130 #cf752b
10...
10...
10...
10...
10...

ruraftmove
#7d3833
.....
.....
.....
0....
00...
luraftmove
#7d3833
.....
.....
.....
....0
...00
rdraftmove
#7d3833
00...
0....
.....
.....
.....
ldraftmove
#7d3833
...00
....0
.....
.....
.....

iruraftmove
#ab5130 #cf752b
.....
.....
.....
10...
11...
iluraftmove
#ab5130 #cf752b
.....
.....
.....
...01
...11
irdraftmove
#ab5130 #cf752b
11...
10...
.....
.....
.....
ildraftmove
#ab5130 #cf752b
...11
...01
.....
.....
.....

raftrota
#ad2f45

uraftrota 
#ad2f45 #c64539
.....
.....
.....
00000
11111
lraftrota
#ad2f45 #c64539
...01
...01
...01
...01
...01
draftrota
#ad2f45 #c64539
11111
00000
.....
.....
.....
rraftrota
#ad2f45 #c64539
10...
10...
10...
10...
10...

ruraftrota
#781d4f
.....
.....
.....
0....
00...
luraftrota
#781d4f
.....
.....
.....
....0
...00
rdraftrota
#781d4f
00...
0....
.....
.....
.....
ldraftrota
#781d4f
...00
....0
.....
.....
.....

iruraftrota
#ad2f45 #c64539
.....
.....
.....
10...
11...
iluraftrota
#ad2f45 #c64539
.....
.....
.....
...01
...11
irdraftrota
#ad2f45 #c64539
11...
10...
.....
.....
.....
ildraftrota
#ad2f45 #c64539
...11
...01
.....
.....
.....

raftsnek
#3b7d4f

uraftsnek 
#3b7d4f #63ab3f
.....
.....
.....
00000
11111
lraftsnek
#3b7d4f #63ab3f
...01
...01
...01
...01
...01
draftsnek
#3b7d4f #63ab3f
11111
00000
.....
.....
.....
rraftsnek
#3b7d4f #63ab3f
10...
10...
10...
10...
10...

ruraftsnek
#2f5753
.....
.....
.....
0....
00...
luraftsnek
#2f5753
.....
.....
.....
....0
...00
rdraftsnek
#2f5753
00...
0....
.....
.....
.....
ldraftsnek
#2f5753
...00
....0
.....
.....
.....

iruraftsnek
#3b7d4f #63ab3f
.....
.....
.....
10...
11...
iluraftsnek
#3b7d4f #63ab3f
.....
.....
.....
...01
...11
irdraftsnek
#3b7d4f #63ab3f
11...
10...
.....
.....
.....
ildraftsnek
#3b7d4f #63ab3f
...11
...01
.....
.....
.....

(LAND)

land
#404973 #686F99
10111
00000
11011
11011
00000

uland
#404973
.....
.....
.....
00000
00000
lland
#404973
...00
...00
...00
...00
...00
dland
#404973
00000
00000
.....
.....
.....
rland
#404973
00...
00...
00...
00...
00...

fillland
#404973 #686F99
10111
00000
11011
11011
00000

ruland
#404973
.....
.....
.....
0....
00...
luland
#404973
.....
.....
.....
....0
...00
rdland
#404973
00...
0....
.....
.....
.....
ldland
#404973
...00
....0
.....
.....
.....

iruland
transparent
.....
.....
.....
00...
00...
iluland
transparent
.....
.....
.....
...00
...00
irdland
transparent
00...
00...
.....
.....
.....
ildland
transparent
...00
...00
.....
.....
.....

(player, boxes)

player 
#ff8933 #e64539 #f5ffe8 #3b7d4f
00000
22022
23032
23132
11111

ulookplayer
#ff8933 #e64539 #f5ffe8 #3b7d4f
23032
22022
11000
11100
11111

dlookplayer
#ff8933 #e64539 #f5ffe8 #3b7d4f
00000
10000
22022
23132
11111

rlookplayer
#ff8933 #e64539 #f5ffe8 #3b7d4f
00000
10000
11220
11230
11111

llookplayer
#ff8933 #e64539 #f5ffe8 #3b7d4f
00000
10000
12200
13200
11111

rlookeye
#f5ffe8 #3b7d4f
.....
.....
0....
1....
.....

llookeye
#f5ffe8 #3b7d4f
.....
.....
....0
....1
.....

ubox
#14182e
.....
.....
.....
.....
00000
lbox
#14182e
....0
....0
....0
....0
....0
dbox
#14182e
00000
.....
.....
.....
.....
rbox
#14182e
0....
0....
0....
0....
0....

(in water, just visual)
wplayer 
#e19e10 #050819
01001
01001
00000
00000
00000

(BOXES)

boxpush
#8f4d57 #bd6a62 #52333f
00000
00220
02020
12201
11111

(move boxes will make shapes movable with a push)
boxmove
#cf752b #f0b541
11011
10001
00000
10001
11011

(rotate boxes will make shapes rotatable around them clockwise or counterclockwise)
boxrota
#e64539 #ff8933
00111
00001
10101
10000
11100

(snake boxes will make linear shapes move like a snake, starting from the box)
boxsnek
#63ab3f #c8d45d
00000
10001
11011
01010
00000

sleepysnek
#63ab3f #c8d45d
00000
00000
11011
00000
00000

(sticks)
hstick
#8f4d57 #14182e
.....
11111
10001
11111
.....

vstick
#bd6a62 #14182e #52333f
.111.
.101.
.101.
.101.
.121.

dstick
#14182e
.000.
.....
.....
.....
.....

(collision happened! Show the cross to show where exactly.)
cross
#f5ffe8
0...0
00.00
.000.
00.00
0...0

sink
#14182e90

(win)
goalplayer
#f5ffe8
....0
...00
0.00.
000..
.0...
goalmove
#ab5130 #cf752b
....0
...00
1.00.
110..
.1...
goalrota
#ad2f45 #c64539
....0
...00
1.00.
110..
.1...
goalsnek
#3b7d4f #63ab3f
....0
...00
1.00.
110..
.1...
goalwin
#ffffff
....0
...00
0.00.
000..
.0...

glue
#8f4d57 #bd6a62 #14182e
22222
11011
11011
11011
22222

glueside
#14182e #14182e50
10001
11.11
.....
.....
.....

gluewide
#8f4d57 #bd6a62 #14182e
21112
21112
20002
21112
21112

holder
#14182e
.....
.000.
.0.0.
.000.
.....


LEGEND

(levels)
. = background
# = levelbarrier
g = raft
s = land
* = player and land
m = boxmove and raft
r = boxrota and raft
n = boxsnek and raft
o = boxpush and land
p = holder and raft
q = boxpush and holder and raft
t = boxmove and holder and raft
u = boxrota and holder and raft
v = boxsnek and holder and raft
f = goalplayer
h = goalmove
i = goalrota
j = goalsnek
a = hstick and land
b = vstick and land
c = glue

(BASICS)
floor = raft or land
fullraft = floor or glue

box = boxmove or boxrota or boxsnek or boxpush
stick = hstick or vstick
colorbox = boxmove or boxrota or boxsnek

part = box or stick(ADD NEW ITEMS HERE SO THEY CAN BE SOLID)
onfloor = part or holder
goal = goalplayer or goalmove or goalrota or goalsnek

(DECO)
(around raft shapes:)
braft =   uraft or   draft or   lraft or   rraft (raft shape border)
craft =  ruraft or  rdraft or  luraft or  ldraft (corner)
iraft = iruraft or irdraft or iluraft or ildraft (inner)
likeraft = raft or fillraft                      (looks like raft)

braftmove =   uraftmove or   draftmove or   lraftmove or   rraftmove (raft shape border)
craftmove =  ruraftmove or  rdraftmove or  luraftmove or  ldraftmove (corner)
iraftmove = iruraftmove or irdraftmove or iluraftmove or ildraftmove (inner)

braftrota =   uraftrota or   draftrota or   lraftrota or   rraftrota (raft shape border)
craftrota =  ruraftrota or  rdraftrota or  luraftrota or  ldraftrota (corner)
iraftrota = iruraftrota or irdraftrota or iluraftrota or ildraftrota (inner)

braftsnek =   uraftsnek or   draftsnek or   lraftsnek or   rraftsnek (raft shape border)
craftsnek =  ruraftsnek or  rdraftsnek or  luraftsnek or  ldraftsnek (corner)
iraftsnek = iruraftsnek or irdraftsnek or iluraftsnek or ildraftsnek (inner)

(around land shapes)
bland = uland or dland or lland or rland         (land ground border)
cland = ruland or rdland or luland or ldland     (corner)
iland = iruland or irdland or iluland or ildland (inner)
visibles = land or fillland                      (looks land)

(face)
lookmarker = ulookmarker or dlookmarker or rlookmarker or llookmarker
lookplayer = ulookplayer or dlookplayer or rlookplayer or llookplayer or rlookeye or llookeye

(around objects)
bbox = ubox or rbox or lbox or dbox (player and boxes)
face = wplayer
bstick = dstick (sticks)
(floor)
rafttype = raftdead or raftmove or raftrota or raftsnek (shape fill color with boxes)
(shadow)
castshadow = braft or craft or iraft or bland or cland or iland or goal

(show this art from current level at the end of turn, also includes sinking etc.)
VISUALS = braft or bbox or fillraft or craft or iraft or shadow or bland or cland or iland or fillland or hide or bstick or glueside or gluewide or face or lookplayer or braftmove or craftmove or iraftmove or braftrota or craftrota or iraftrota or craftsnek or iraftsnek or braftsnek

(LOGIC)

testbox = testmove or testrota or testsnek or testpush
teststick = testhstick or testvstick
test = testbox or testraft or teststick or testglue or testplayer or testwall or testholder

(rotation push)
canmov = rcan or ucan or dcan or lcan
rotdir = clockdir or counterdir
vcan = ucan or dcan
hcan = rcan or lcan
newmove = un or rn or dn or ln
(quadrant markers)
quad = ruq or luq or rdq or ldq
line = uline or dline or rline or lline
vline = uline or dline
hline = rline or lline

diaquad = udia or ldia or rdia or ddia
vdia = udia or ddia
hdia = ldia or rdia
(collision)
check = ucheck or dcheck or lcheck or rcheck
find = vfind or hfind or bfind
obstacle = floor or levelbarrier or player
(old pieces)
oldstuff = fullraft or part or player

(snake push)
sneksegment = vsneksegment or hsneksegment

(get rid of these after each colors' rules)
removeAfterMove = test or pusher or check or checkhere or overlap or snekold or snaker or rotate or center or norotate or canmov or rotdir or quad or line or dia or diaquad


SOUNDS

sfx0 63417907 (push)
sfx1 65329507 (nope)
sfx2 56853700 (yay)
sfx3 78569907 (boat move)
sfx4 59716309 (boat turn)
sfx5 34042503 (boat snek)
sfx6 47626902 (explosion)
sfx7 94713705 (up hole)
sfx8 90055904 (into hole)
sfx9 72788709 (sinking)


COLLISIONLAYERS

(background)
background
wave
levelbarrier
shadow
tide
ripples
hide

(ground)
   land
 luland
 ldland
 ruland
 rdland
  uland
  dland
  lland
  rland
iluland
ildland
iruland
irdland
fillland

   raft
 luraft
 ldraft
 ruraft
 rdraft
  uraft
  draft
  lraft
  rraft
iluraft
ildraft
iruraft
irdraft
fillraft

rafttype

 luraftmove
 ldraftmove
 ruraftmove
 rdraftmove
  uraftmove
  draftmove
  lraftmove
  rraftmove
iluraftmove
ildraftmove
iruraftmove
irdraftmove

 luraftrota
 ldraftrota
 ruraftrota
 rdraftrota
  uraftrota
  draftrota
  lraftrota
  rraftrota
iluraftrota
ildraftrota
iruraftrota
irdraftrota

 luraftsnek
 ldraftsnek
 ruraftsnek
 rdraftsnek
  uraftsnek
  draftsnek
  lraftsnek
  rraftsnek
iluraftsnek
ildraftsnek
iruraftsnek
irdraftsnek

glueside
glue
gluewide

active
local
selectedraft, selecteddone

(box, stick, holder)
box, stick
ubox
dbox
rbox
lbox
dstick

boxindiv
frombox
sleepysnek

(target)
holder
goal
goalwin

(player)
player, lowplayer
lookmarker
wplayer
lookplayer

(raft rules)
starter
collided
testraft, testglue
testplayer
testbox, teststick, testwall
testholder

(move raft rules)
pusher

(rotation raft rules)
rotate
norotate
center
rotdir
ucan
dcan
rcan
lcan
line
quad
diaquad
un
dn
rn
ln
unpicked
picked
newtile
newdone, newfill
once
newrun
overlap
dia, newdia
hfind
vfind
bfind
checkhere
ucheck
lcheck
rcheck
dcheck
between

(snake raft rules)
snaker

snekneck
snekbody
snekhead
sneksegment
snekold

(show on top of everything)
nosink, sink
hey
cross


RULES

[VISUALS] -> []

[ripples no fullraft] -> [] 
[fullraft] -> [fullraft ripples] 

[goalwin goal] -> []

(wip, move to bottom and make this take realtime)
(shapes sink)
[sink] -> [no raft] sfx9
[onfloor no floor] -> []



(on player move)
==========================================================================

(hide collision crosses and get rid of collision markers after next move)
[> player] [cross]      -> [> player] []
[> player] [collided]   -> [> player] []

(reorient player)
[up    player] -> [up    player ulookmarker]
[down  player] -> [down  player dlookmarker]
[right player] -> [right player rlookmarker]
[left  player] -> [left  player llookmarker]



(MOVES INTO SOLID OR NOTHING)
(movement -> 2 spaces teleportation)
==========================================================================

(move into levelbarrier)
[> player || levelbarrier] -> [stationary player || levelbarrier] sfx1 nosave

(move floor to floor)
[> player floor || floor no part] -> [floor || player floor] nosave

(move empty to empty / land)
[> player no floor || no obstacle] -> [ || player] sfx9 nosave

[> player no floor || land] -> [stationary player || land] sfx1 nosave

(move land to empty)
[> player land || no floor] -> [stationary player land || ] sfx1 nosave



(PUSHES)
(movement -> teleportation of boxes and player)
==========================================================================

(push box to floor)
[> player floor || box no holder|| floor no part] -> [floor || player || floor box] sfx0

(push box in holder)
[> player floor || land box holder] -> [stationary player floor || land box holder] sfx1 nosave

(push stick to floor (no gap))
[> player floor || stick | floor | floor no part] -> [floor || player | floor | floor stick] sfx0

(push stick to floor (gap))
horizontal [> player floor || hstick | no floor | floor] -> [floor || player || floor hstick] sfx0
vertical   [> player floor || vstick | no floor | floor] -> [floor || player || floor vstick] sfx0
horizontal [> player floor || vstick | no floor | floor] -> [floor || player |  glue | floor] sfx0 sfx8
vertical   [> player floor || hstick | no floor | floor] -> [floor || player |  glue | floor] sfx0 sfx8

(push part to part / empty)
[> player floor || part no holder || part]     -> [stationary player floor || part || part] sfx1 nosave
[> player floor || part no holder || no floor] -> [stationary player floor || part ||     ] sfx1 nosave
[> player floor || stick          || part]     -> [stationary player floor || stick || part] sfx1 nosave
[> player floor || stick          || no floor] -> [stationary player floor || stick ||     ] sfx1 nosave


(MOVES STARTING RAFTS)
(movement -> "starter" marker on rafts telling them to move)
(also works from in the water)
==========================================================================

(move raft to empty - convert)
[> player raft || no floor] -> [stationary player raft > starter || ]

(swimming into raft, gives raft local and active markers)
[> player no floor || raft] -> [stationary player || > starter active local raft]

(moving on inactive raft makes error sound)
[starter raft no rafttype] -> [raft] sfx1

(still spread local and active if player is in void)
[player no floor] [local  | floor   ] -> [player] [local  | floor    local ]
[player no floor] [active | fullraft] -> [player] [active | fullraft active]

(moving into box holder on raft, starts active and local only there)
[> player floor || raft box holder] -> [stationary player floor || box holder > starter raft active local] sfx1
[box holder starter] [no starter active] -> [box holder starter] []
[box holder starter] [no starter local]  -> [box holder starter] []

(still spread local and active if player is pushing from elsewhere)
[box holder starter] [local  | floor   ] -> [box holder starter] [local  | floor    local ]
[box holder starter] [active | fullraft] -> [box holder starter] [active | fullraft active]

(start tide)
[starter] -> [starter tide]




( ###    ###  #### ##### #### )
( #  #  #   # #      #   #    )
( ###   #   # ####   #   #### )
( #  #  ##### #      #      # )
( #   # #   # #      #   #### )

(MOVE EFFECT)
==========================================================================

(give whole shape push markers)
[> starter raftmove] [active] -> [> starter raftmove > pusher] [active > pusher]

(raft moved two tiles)
[> pusher raft || ] -> [> pusher raft || testraft ripples]
[> pusher glue || ] -> [> pusher glue || testglue ripples]

(check collision)
[starter] [test obstacle no active] -> [starter collided] [obstacle] sfx1

(get rid of all push markers if collision)
[starter collided] [pusher fullraft] -> [starter collided] [fullraft]
[starter collided] [test]            -> [starter collided] []

(NO COLLISION)
(kill old tiles)
[starter no collided] [pusher fullraft] -> [starter] [pusher]

(moved two tiles)
[> pusher player  || ] -> [> pusher || testplayer]
[> pusher boxmove || ] -> [> pusher || testmove  ]
[> pusher boxrota || ] -> [> pusher || testrota  ]
[> pusher boxsnek || ] -> [> pusher || testsnek  ]
[> pusher boxpush || ] -> [> pusher || testpush  ]
[> pusher hstick  || ] -> [> pusher || testhstick]
[> pusher vstick  || ] -> [> pusher || testvstick]
[> pusher holder  || ] -> [> pusher || testholder]

(player in water)
[> starter pusher no collided] [player no floor || ] -> [> starter] [ || testplayer]

(place moved tiles)
[testraft] -> [raft] sfx3
[testglue] -> [glue]

[testplayer] -> [player ]
[testpush  ] -> [boxpush]
[testmove  ] -> [boxmove]
[testrota  ] -> [boxrota]
[testsnek  ] -> [boxsnek]
[testhstick] -> [hstick ]
[testvstick] -> [vstick ]
[testholder] -> [holder ]

[removeAfterMove] -> []



(ROTATE EFFECT)
================================================================

(find the center of rotation in the local active area)
[starter raftrota] [local boxrota no land] -> [starter raftrota] [local boxrota center]
(stop if the move is useless)
[parallel starter raftrota | ... | center] -> [raftrota no tide| ... | ] sfx1
[starter raftrota center] -> [raftrota no tide] sfx1

(find all active floor)
[center] [no center active fullraft] -> [center] [active fullraft rotate]
(find every obstacle outside the rotating area)
[center] [obstacle no rotate] -> [center] [obstacle norotate]


(clockwise or counterclockwise? ============================================)

[center] -> [center ucan rcan dcan lcan]

(how to move in each quarter around center for clockwise)
up    [rcan | ] -> [rcan | rcan uline]
down  [lcan | ] -> [lcan | lcan dline]
left  [ucan | ] -> [ucan | ucan lline]
right [dcan | ] -> [dcan | dcan rline]
horizontal [rcan no center | ] -> [rcan | rcan]
horizontal [lcan no center | ] -> [lcan | lcan]
vertical   [ucan no center | ] -> [ucan | ucan]
vertical   [dcan no center | ] -> [dcan | dcan]

(play direction -> rotation direction)
right [ > starter rcan] [center] -> [ > starter rcan] [center clockdir]
left  [ > starter lcan] [center] -> [ > starter lcan] [center clockdir]
up    [ > starter ucan] [center] -> [ > starter ucan] [center clockdir]
down  [ > starter dcan] [center] -> [ > starter dcan] [center clockdir]

right [ < starter rcan] [center] -> [ < starter rcan] [center counterdir]
left  [ < starter lcan] [center] -> [ < starter lcan] [center counterdir]
up    [ < starter ucan] [center] -> [ < starter ucan] [center counterdir]
down  [ < starter dcan] [center] -> [ < starter dcan] [center counterdir]

[center canmov] -> [center]


(setup quadrants, diagonal quadrants =======================================)
[rcan dcan] -> [ruq]
[lcan dcan] -> [rdq]
[lcan ucan] -> [ldq]
[rcan ucan] -> [luq]

vertical   [ | center | ] -> [newdia | center | newdia]
horizontal [ | newdia | ] -> [dia    |        | dia   ]

startloop
up    [luq dia | ] -> [luq dia | newdia] 
up    [ruq dia | ] -> [ruq dia | newdia] 
down  [ldq dia | ] -> [ldq dia | newdia] 
down  [rdq dia | ] -> [rdq dia | newdia] 
left  [luq newdia | ] -> [luq newdia | dia] 
left  [ldq newdia | ] -> [ldq newdia | dia] 
right [ruq newdia | ] -> [ruq newdia | dia] 
right [rdq newdia | ] -> [rdq newdia | dia] 
endloop

[newdia] -> []

(fill)
[rline] -> [rline rdia]
[lline] -> [lline ldia]
[uline] -> [uline udia]
[dline] -> [dline ddia]
[rdia | quad no dia] -> [rdia | quad rdia]
[ldia | quad no dia] -> [ldia | quad ldia]
[udia | quad no dia] -> [udia | quad udia]
[ddia | quad no dia] -> [ddia | quad ddia]


(MOVE TILES===============================================================)
[rotate] -> [rotate unpicked]

startloop

(new pick)
random [center newrun] [unpicked] -> [center newrun] [picked] 

(remember type of this pick in the center)
[center newrun] [picked player ] -> [center newrun testplayer] [picked player ]
[center newrun] [picked boxpush] -> [center newrun testpush  ] [picked boxpush]
[center newrun] [picked boxmove] -> [center newrun testmove  ] [picked boxmove]
[center newrun] [picked boxrota] -> [center newrun testrota  ] [picked boxrota]
[center newrun] [picked boxsnek] -> [center newrun testsnek  ] [picked boxsnek]
[center newrun] [picked hstick ] -> [center newrun testhstick] [picked hstick ]
[center newrun] [picked vstick ] -> [center newrun testvstick] [picked vstick ]
[center newrun] [picked holder ] -> [center newrun testholder] [picked holder ]
[center newrun] [picked raft   ] -> [center newrun testraft  ] [picked raft   ]
[center newrun] [picked glue   ] -> [center newrun testglue  ] [picked glue   ]

(mark collision find type on original tile pos)
[center newrun] [picked vdia      ] -> [center newrun] [picked vdia hfind between] 
[center newrun] [picked hdia      ] -> [center newrun] [picked hdia vfind between]
[center newrun] [picked no diaquad] -> [center newrun] [picked bfind]

(move to middle and count)
up    [ldq picked | ] -> [ldq un | picked] 
down  [ruq picked | ] -> [ruq dn | picked] 
left  [rdq picked | ] -> [rdq ln | picked] 
right [luq picked | ] -> [luq rn | picked] 

up    [dline picked | ] -> [dline un | picked] 
down  [uline picked | ] -> [uline dn | picked] 
left  [rline picked | ] -> [rline ln | picked] 
right [lline picked | ] -> [lline rn | picked] 

(NEW TILE from middle, not during unfinished moving)
[center newrun picked] -> [center newrun newtile] 

(move to position based on count)
random [un] [newtile] -> [once] [newtile ]
      left  [clockdir  ] [once] [newtile | ] -> [clockdir  ] [] [ | newtile]
      right [counterdir] [once] [newtile | ] -> [counterdir] [] [ | newtile]
random [dn] [newtile] -> [once] [newtile ] 
      right [clockdir  ] [once] [newtile | ] -> [clockdir  ] [] [ | newtile]
      left  [counterdir] [once] [newtile | ] -> [counterdir] [] [ | newtile]
random [rn] [newtile] -> [once] [newtile ] 
      up    [clockdir  ] [once] [newtile | ] -> [clockdir  ] [] [ | newtile]
      down  [counterdir] [once] [newtile | ] -> [counterdir] [] [ | newtile]
random [ln] [newtile] -> [once] [newtile ] 
      down  [clockdir  ] [once] [newtile | ] -> [clockdir  ] [] [ | newtile]
      up    [counterdir] [once] [newtile | ] -> [counterdir] [] [ | newtile]

(re-add keepgoing only if not done - directions left)
[center] -> [center newrun]
[newmove] [newrun] -> [newmove] []

(collision find type in final position)
[center newrun] [newtile vdia] ->       [center newrun] [newtile vdia hfind between]
[center newrun] [newtile hdia] ->       [center newrun] [newtile hdia vfind between]
[center newrun] [newtile no diaquad] -> [center newrun] [newtile bfind]

(find overlap)
horizontal [center newrun] [hfind | ] -> [center newrun] [hfind | hfind]
vertical   [center newrun] [vfind | ] -> [center newrun] [vfind | vfind]
[center newrun] [ldq vfind hfind] -> [center newrun] [ldq vfind hfind ucheck rcheck]
[center newrun] [luq vfind hfind] -> [center newrun] [luq vfind hfind dcheck rcheck]
[center newrun] [rdq vfind hfind] -> [center newrun] [rdq vfind hfind ucheck lcheck]
[center newrun] [ruq vfind hfind] -> [center newrun] [ruq vfind hfind dcheck lcheck]

(expand area that needs to be checked)
up    [ucheck | no between] -> [ucheck | ucheck]
down  [dcheck | no between] -> [dcheck | dcheck]
left  [lcheck | no between] -> [lcheck | lcheck]
right [rcheck | no between] -> [rcheck | rcheck]
[check] -> [checkhere]

(find between)
[bfind | | bfind] -> [bfind | checkhere | bfind]
[bfind | | ... | bfind] -> [bfind | checkhere | ... | bfind]

(done)
[center newrun] [between] -> [center newrun] []
[center newrun] [find   ] -> [center newrun] []

(where will the new player, etc go?)
[center newrun testvstick] [newtile] -> [center newrun] [newtile testhstick  ] (swap)
[center newrun testhstick] [newtile] -> [center newrun] [newtile testvstick  ] (swap)
[center newrun test] [newtile] -> [center newrun] [newtile test]

(done tiles ready to replace)
[center newrun] [newtile] -> [center newrun] [newdone]

endloop


(COLLISION=============================================================)

[center] [newdone norotate] -> [center collided] [newdone norotate overlap] sfx1

(tempcollision objects, are any left? then collision)
[checkhere no norotate] -> []
[checkhere rotate]   -> [rotate]
[center] [checkhere] -> [center collided] [overlap] sfx1

(spread crosses)
[center collided] -> [center collided cross] sfx1
[cross || ] -> [cross || cross]
(delete unneccesary)
[cross no overlap] -> []

(stop everything after collision)
[center collided] [newdone] -> [center collided] []
[center collided] [starter] -> [center collided] []
[center collided] [test]    -> [center collided] []
[center collided] [rotate]  -> [center collided] []

(PLACE==================================================================)

(delete old ground and things on it)
[rotate oldstuff] -> [rotate]

(move ground)
[newdone testraft] -> [raft]
[newdone testglue] -> [glue]

(move floor player)
[center no collided] [player no rotate] -> [center] [lowplayer]

[> starter] [lowplayer || no obstacle] -> [> starter] [                  || player  ]
[> starter] [lowplayer ||    obstacle] -> [> starter] [stationary player || obstacle] sfx1

(move player and stuff)
[testplayer] -> [player ]
[testpush  ] -> [boxpush]
[testmove  ] -> [boxmove]
[testrota  ] -> [boxrota]
[testsnek  ] -> [boxsnek]
[testhstick] -> [hstick ]
[testvstick] -> [vstick ]
[testholder] -> [holder ]

(done!)
[center no collided] -> [] sfx4

[collided] [tide] -> [collided] []
[removeAfterMove] -> []




(SNAKE EFFECT)
(WIP)
==========================================================================

(start at snek active box, re-assign that it is the head of the snake)
[> starter raftsnek] [local boxsnek no sleepysnek] -> [> starter raftsnek] [local boxsnek > snaker snekhead snekold]

(check future head position for collision)
[> snaker || obstacle] -> [collided || obstacle cross] sfx1

(remember that the player is in water and show possible spot)
[> snaker] [player no raftsnek || ] -> [> snaker] [lowplayer || testplayer]

(create direction markers every tile 
 building up from head, pointing at previous)
startloop
[snekold snaker | active no snaker] -> [snaker | active < snaker snekold]
endloop 

(add one more in front)
[snekhead > snaker | no snaker] -> [snekhead > snaker | > snaker]

(place test parts)
[> snaker player  || ] -> [> snaker || testplayer]
[> snaker boxmove || ] -> [> snaker || testmove  ]
[> snaker boxrota || ] -> [> snaker || testrota  ]
[> snaker boxsnek || ] -> [> snaker || testsnek  ]
[> snaker boxpush || ] -> [> snaker || testpush  ]
[> snaker holder  || ] -> [> snaker || testholder]
[> snaker hstick  || no snaker]         -> [> snaker ||        testhstick]
[> snaker vstick  || no snaker]         -> [> snaker ||        testvstick]
[> snaker hstick  || parallel snaker]   -> [> snaker || snaker testhstick]
[> snaker vstick  || parallel snaker]   -> [> snaker || snaker testvstick]
(swap these)
[> snaker hstick  || orthogonal snaker] -> [> snaker || snaker testvstick]
[> snaker vstick  || orthogonal snaker] -> [> snaker || snaker testhstick]

(single move, these appear on off tiles)
[> snaker raft | ] -> [> snaker | testraft]
[> snaker glue | ] -> [> snaker | testglue]

(convert all back)
[snaker] [active fullraft] -> [snaker] []
(2nd move)
[> snaker testraft | ] -> [> snaker | raft]
[> snaker testglue | ] -> [> snaker | glue]

[lowplayer || testplayer obstacle] -> [player || obstacle]
[lowplayer] -> [] sfx1 (ALWAYS make a sound when pushing into side)

[testplayer] -> [player ]
[testpush  ] -> [boxpush]
[testmove  ] -> [boxmove]
[testrota  ] -> [boxrota]
[testhstick] -> [hstick ]
[testvstick] -> [vstick ]
[testholder] -> [holder ]
[testsnek  ] -> [boxsnek] sfx5

[collided] [tide] -> [collided] []
[removeAfterMove] -> []
[snekbody       ] -> []
[snekhead       ] -> []
[sleepysnek     ] -> []



(GLUE)
==========================================================================

(get rid of unneeded)
[floor | glue | floor] -> [floor | testglue | floor]
[glue] -> []
[testglue] -> [glue]



(MISC)
==========================================================================

[removeAfterMove] -> []
[starter        ] -> []
[active         ] -> []
[local          ] -> []
[rafttype       ] -> []
[boxindiv       ] -> []
[sink           ] -> []

[player  goalplayer] -> [goalwin] sfx2
[boxmove goalmove  ] -> [goalwin] sfx2
[boxrota goalrota  ] -> [goalwin] sfx2
[boxsnek goalsnek  ] -> [goalwin] sfx2




(  ###  ###  ##### )
( #   # #  #   #   )
( #   # ###    #   )
( ##### #  #   #   )
( #   # #  #   #   )

(GIVE RAFTS COLOR)
==========================================================================

(raft)
up   [ raft | no raft] -> [ raft |  uraft]
left [ raft | no raft] -> [ raft |  lraft]
down [ raft | no raft] -> [ raft |  draft]
right[ raft | no raft] -> [ raft |  rraft]
up   [rraft | no raft] -> [rraft | ruraft]
up   [lraft | no raft] -> [lraft | luraft]
down [rraft | no raft] -> [rraft | rdraft]
down [lraft | no raft] -> [lraft | ldraft]
[rraft uraft] -> [rraft uraft iruraft]
[rraft draft] -> [rraft draft irdraft]
[lraft uraft] -> [lraft uraft iluraft]
[lraft draft] -> [lraft draft ildraft]

(inside between four rafts)
[uraft draft rraft lraft] -> [uraft draft rraft lraft fillraft]

(land)
up   [ land | no land] -> [ land |  uland]
left [ land | no land] -> [ land |  lland]
down [ land | no land] -> [ land |  dland]
right[ land | no land] -> [ land |  rland]
up   [rland | no land] -> [rland | ruland]
up   [lland | no land] -> [lland | luland]
down [rland | no land] -> [rland | rdland]
down [lland | no land] -> [lland | ldland]
[rland uland] -> [rland uland iruland]
[rland dland] -> [rland dland irdland]
[lland uland] -> [lland uland iluland]
[lland dland] -> [lland dland ildland]

(inside between four land)
[uland dland rland lland] -> [uland dland rland lland fillland]

(player)
up   [player | ] -> [player | ubox]
left [player | ] -> [player | lbox]
down [player | ] -> [player | dbox]
right[player | ] -> [player | rbox]

[player] [ulookmarker] -> [player ulookplayer] []
[player] [dlookmarker] -> [player dlookplayer] []
[player] [rlookmarker] -> [player rlookplayer] []
[player] [llookmarker] -> [player llookplayer] []

right [rlookplayer | ] -> [rlookplayer | rlookeye]
left  [llookplayer | ] -> [llookplayer | llookeye]

[player no floor] -> [player wplayer]

(things)
up   [box | ] -> [box | ubox]
left [box | ] -> [box | lbox]
down [box | ] -> [box | dbox]
right[box | ] -> [box | rbox]

down [vstick | ] -> [vstick | dstick]

(glue)
down     [glue | no fullraft no obstacle] -> [glue | glueside]
vertical [glue | fullraft] -> [glue gluewide | fullraft]

(shadow & levelbarrier)
[castshadow no sink] -> [castshadow shadow]
[levelbarrier] -> [levelbarrier hide]

(wave)
[tide | ] -> [tide | tide]
[wave tide] -> []
[no wave tide] -> [wave]



(FIND INDIVIDUAL RAFTS, GIVE COLOR)
==========================================================================

(preparation: find out where snakeheads are (correct snek placement))
startloop
random [raft boxsnek  no snekbody | fullraft            ] -> [raft boxsnek snekhead | fullraft snekneck]
       [raft snekhead no snekbody | fullraft no snekneck] -> [raft snekbody         | fullraft         ]
       [raft snekhead no snekbody]                        -> [raft snekhead snekbody]
       [snekneck] -> []
endloop

startloop
(select next raft)
random [raft no selecteddone no selectedraft] -> [raft selectedraft]
[raft selectedraft | raft] -> [raft selectedraft | raft selectedraft]

(raft with color starting from one color box that's not on a holder, fill later)
random [selectedraft raft colorbox no holder] -> [selectedraft raft colorbox frombox]
[frombox boxmove raft] -> [frombox boxmove raft raftmove]
[frombox boxrota raft] -> [frombox boxrota raft raftrota]

(always use snake in head position if avaliable)
random [selectedraft frombox boxsnek no snekhead] [selectedraft boxsnek snekhead] -> [selectedraft boxsnek] [selectedraft boxsnek frombox snekhead]
[frombox boxsnek raft] -> [frombox boxsnek raft raftsnek]
(all sneks are in the wrong place, let them sleep)
[frombox boxsnek no snekhead raft] -> [frombox boxsnek sleepysnek raft]

(next)
[selectedraft] -> [selecteddone]
endloop

[selecteddone] -> []
[frombox] -> []



(SPREAD ACTIVE / LOCAL)
==========================================================================

(from player on raft)
[raft player] -> [raft player active local]
[fullraft active | fullraft] -> [fullraft active | fullraft active]
[raft local | raft] -> [raft local | raft local]



(SPREAD RAFT COLOR)
==========================================================================

startloop
(spread color)
[likeraft raftmove | likeraft no colorbox] -> [likeraft raftmove | likeraft raftmove]
[likeraft raftrota | likeraft no colorbox] -> [likeraft raftrota | likeraft raftrota]
[likeraft raftsnek | likeraft no colorbox] -> [likeraft raftsnek | likeraft raftsnek]

[likeraft raftmove | likeraft colorbox holder] -> [likeraft raftmove | likeraft colorbox holder raftmove]
[likeraft raftrota | likeraft colorbox holder] -> [likeraft raftrota | likeraft colorbox holder raftrota]
[likeraft raftsnek | likeraft colorbox holder] -> [likeraft raftsnek | likeraft colorbox holder raftsnek]

(when multiple are allowed)
[likeraft raftmove | likeraft boxmove            ] -> [likeraft raftmove | likeraft raftmove boxmove]
[likeraft raftsnek | likeraft boxsnek no snekhead] -> [likeraft raftsnek | likeraft raftsnek boxsnek sleepysnek]
endloop

(sinking raft)
(nosink)
[land   || raft] -> [land   || raft nosink]
[nosink || raft] -> [nosink || raft nosink]
[nosink |  raft] -> [nosink |  raft nosink]

[raft no nosink]         -> [raft sink] sfx9
[raft sink | castshadow] -> [raft sink | castshadow sink]
[nosink] -> []



(KILL BOXES)
==========================================================================

(start dead: raft boxes still without color? must be mixed or too many!)
[colorbox raft no rafttype no holder] -> [colorbox raft raftdead]

(snake makes no sense!)
horizontal [fullraft | fullraft | fullraft] -> [fullraft | fullraft hsneksegment | fullraft]
vertical   [fullraft | fullraft | fullraft] -> [fullraft | fullraft vsneksegment | fullraft]
horizontal [fullraft | vsneksegment]  -> [fullraft | sleepysnek] 
vertical   [fullraft | hsneksegment]  -> [fullraft | sleepysnek] 
[sleepysnek | fullraft no boxsnek] -> [sleepysnek | sleepysnek fullraft]
[sleepysnek no boxsnek] -> []
[sneksegment] -> []

(fill dead)
[raftdead | likeraft] -> [raftdead | likeraft raftdead]
[raftdead colorbox]   -> [raftdead boxpush]



(COLOR RAFT BORDERS)
==========================================================================

(move)
up   [ raftmove | no raftmove] -> [ raftmove |  uraftmove]
left [ raftmove | no raftmove] -> [ raftmove |  lraftmove]
down [ raftmove | no raftmove] -> [ raftmove |  draftmove]
right[ raftmove | no raftmove] -> [ raftmove |  rraftmove]
up   [rraftmove | no raftmove] -> [rraftmove | ruraftmove]
up   [lraftmove | no raftmove] -> [lraftmove | luraftmove]
down [rraftmove | no raftmove] -> [rraftmove | rdraftmove]
down [lraftmove | no raftmove] -> [lraftmove | ldraftmove]
[rraftmove uraftmove] -> [rraftmove uraftmove iruraftmove]
[rraftmove draftmove] -> [rraftmove draftmove irdraftmove]
[lraftmove uraftmove] -> [lraftmove uraftmove iluraftmove]
[lraftmove draftmove] -> [lraftmove draftmove ildraftmove]

(rotate)
up   [ raftrota | no raftrota] -> [ raftrota |  uraftrota]
left [ raftrota | no raftrota] -> [ raftrota |  lraftrota]
down [ raftrota | no raftrota] -> [ raftrota |  draftrota]
right[ raftrota | no raftrota] -> [ raftrota |  rraftrota]
up   [rraftrota | no raftrota] -> [rraftrota | ruraftrota]
up   [lraftrota | no raftrota] -> [lraftrota | luraftrota]
down [rraftrota | no raftrota] -> [rraftrota | rdraftrota]
down [lraftrota | no raftrota] -> [lraftrota | ldraftrota]
[rraftrota uraftrota] -> [rraftrota uraftrota iruraftrota]
[rraftrota draftrota] -> [rraftrota draftrota irdraftrota]
[lraftrota uraftrota] -> [lraftrota uraftrota iluraftrota]
[lraftrota draftrota] -> [lraftrota draftrota ildraftrota]

(snake)
up   [ raftsnek | no raftsnek] -> [ raftsnek |  uraftsnek]
left [ raftsnek | no raftsnek] -> [ raftsnek |  lraftsnek]
down [ raftsnek | no raftsnek] -> [ raftsnek |  draftsnek]
right[ raftsnek | no raftsnek] -> [ raftsnek |  rraftsnek]
up   [rraftsnek | no raftsnek] -> [rraftsnek | ruraftsnek]
up   [lraftsnek | no raftsnek] -> [lraftsnek | luraftsnek]
down [rraftsnek | no raftsnek] -> [rraftsnek | rdraftsnek]
down [lraftsnek | no raftsnek] -> [lraftsnek | ldraftsnek]
[rraftsnek uraftsnek] -> [rraftsnek uraftsnek iruraftsnek]
[rraftsnek draftsnek] -> [rraftsnek draftsnek irdraftsnek]
[lraftsnek uraftsnek] -> [lraftsnek uraftsnek iluraftsnek]
[lraftsnek draftsnek] -> [lraftsnek draftsnek ildraftsnek]

[onfloor no floor] -> []

==============
WINCONDITIONS
==============

no goal
no sink

=======     
LEVELS
=======

###############
#.............#
#.sss.tgm.ggg.#
#.s.s.g.g.g.g.#
#.*ss.ggg.ggg.#
#...s.........#
#...s.........#
#...s.........#
#...s.........#
#.............#
#.....h.h.....#
#.............#
#.............#
#.............#
###############

###############
#.............#
#.i.*.m.r.n...#
#...s.g.g.g...#
#.sss.p.gcg...#
#.s.s.........#
#.ssb.........#
#.s.s.........#
#.sss.f.......#
#.s.s.........#
#.oss.........#
#.............#
#.............#
#.............#
###############

