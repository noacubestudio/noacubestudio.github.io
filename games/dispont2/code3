title dis pontibus II remix
homepage by noa, date ver. 04-05-a
background_color #14182e
text_color #ff8933

run_rules_on_level_start

again_interval 0.05

(fix
• face disappears when you moved initially, then stopped DONE
• holders dont use their own color WIP
• holders move the player with rota/snek WIP
• snakes don't need to be one lvl_line right now
• test for weird bugs, maybe not allow huge shapes?
• ripple show at future position when collision happened
add
• rotate for rotate box on holder
  • appears opposite of player
  • turns 90 even if the platform cant rotate
• flip box (mirrors in move axis across box point)
• shift box?? (that moves just a row. could also split/ sink_anim parts)
• animate
  • sinking
  • ripple
  • collision overlay (full shape with borders, all one transparent color?)
• code
  • obstacle detection that's the same for all raft movements?
  • ?single "test" object for raft itself -> check_m collision -> move everything else directly?
maybe
• Multi box pushing
• Consider swimming in a line until hitting an obstacle when in water, could be an interesting contrast
)


OBJECTS (f1)

(debug and editor)
chapter
transparent
hey
red
00000
0...0
0...0
0...0
00000

(markers)
active_m
transparent
local_m
transparent
outside_m
transparent
nosink
transparent
raft_dead
transparent

raft_random_picked
transparent
raft_random_done
transparent

box_random_picked
transparent

test_player_swim
transparent

look_mu
transparent
look_md
transparent
look_mr
transparent
look_ml
transparent

test_raft
transparent
test_player
transparent
test_box_none
transparent
test_box_move
transparent
test_box_rota
transparent
test_box_snek
transparent
test_stik_h
transparent
test_stik_v
transparent
test_glue
transparent
test_holder
transparent


(rotate)
rota_active_m
transparent
obstacle_m
transparent

lvl_half_u
transparent
lvl_half_d
transparent
lvl_half_l
transparent
lvl_half_r
transparent
center_m
transparent
rotate_cw
transparent
rotate_cc
transparent

lvl_line_u
transparent
lvl_line_d
transparent
lvl_line_r
transparent
lvl_line_l
transparent

rota_random_unpicked
transparent
rota_random_picked
transparent
newtile
transparent
newdone
black
newfill
transparent

recorded_u
transparent
recorded_r
transparent
recorded_l
transparent
recorded_d
transparent
lvl_quad_ru
transparent
lvl_quad_lu
transparent
lvl_quad_rd
transparent
lvl_quad_ld
transparent

raft_collided_m
transparent
overlap_m
transparent

once
transparent
newrun
transparent

lvl_dialine
transparent
lvl_dialine_m
transparent
lvl_diaquad_u
transparent
lvl_diaquad_d
transparent
lvl_diaquad_r
transparent
lvl_diaquad_l
transparent

check_hori
transparent
check_vert
transparent
check_both
transparent

check_now
transparent
check_mu
transparent
check_md
transparent
check_mr
transparent
check_ml
transparent
between
transparent

(snake)
snek_neck_m
transparent
snek_head_m
transparent
snek_body_m
transparent

snek_segment_v
transparent
snek_segment_h
transparent

snek_prev_m
transparent

(waves)
wave_m
transparent

starter
transparent
pusher
transparent
snaker
transparent

animator
transparent

holding_m
transparent


(TILES f2)
==========================================================================

background
#2c354d
.....
.0...
.....
...0.
.....

wave
#14182e #2c354d
00000
00010
00000
01000
00000

ripple
#14182e #2c354d
00000
00111
00000
01100
00000


shadow
#14182e

lvl_wall
black

hide
#14182e

(REGULAR RAFT)
raft
#52333f

raft_bu
#52333f #8f4d57
.....
.....
.....
00000
11111
raft_bl
#52333f #8f4d57
...01
...01
...01
...01
...01
raft_bd
#52333f #8f4d57
11111
00000
.....
.....
.....
raft_br
#52333f #8f4d57
10...
10...
10...
10...
10...

raft_fill
#52333f

raft_cru
#3d2936
.....
.....
.....
0....
00...
raft_clu
#3d2936
.....
.....
.....
....0
...00
raft_crd
#3d2936
00...
0....
.....
.....
.....
raft_cld
#3d2936
...00
....0
.....
.....
.....

raft_iru
#52333f #8f4d57
.....
.....
.....
10...
11...
raft_ilu
#52333f #8f4d57
.....
.....
.....
...01
...11
raft_ird
#52333f #8f4d57
11...
10...
.....
.....
.....
raft_ild
#52333f #8f4d57
...11
...01
.....
.....
.....

raft_move
#ab5130

raft_move_bu 
#ab5130 #cf752b
.....
.....
.....
00000
11111
raft_move_bl
#ab5130 #cf752b
...01
...01
...01
...01
...01
raft_move_bd
#ab5130 #cf752b
11111
00000
.....
.....
.....
raft_move_br
#ab5130 #cf752b
10...
10...
10...
10...
10...

raft_move_cru
#7d3833
.....
.....
.....
0....
00...
raft_move_clu
#7d3833
.....
.....
.....
....0
...00
raft_move_crd
#7d3833
00...
0....
.....
.....
.....
raft_move_cld
#7d3833
...00
....0
.....
.....
.....

raft_move_iru
#ab5130 #cf752b
.....
.....
.....
10...
11...
raft_move_ilu
#ab5130 #cf752b
.....
.....
.....
...01
...11
raft_move_ird
#ab5130 #cf752b
11...
10...
.....
.....
.....
raft_move_ild
#ab5130 #cf752b
...11
...01
.....
.....
.....

raft_rota
#ad2f45

raft_rota_bu 
#ad2f45 #c64539
.....
.....
.....
00000
11111
raft_rota_bl
#ad2f45 #c64539
...01
...01
...01
...01
...01
raft_rota_bd
#ad2f45 #c64539
11111
00000
.....
.....
.....
raft_rota_br
#ad2f45 #c64539
10...
10...
10...
10...
10...

raft_rota_cru
#781d4f
.....
.....
.....
0....
00...
raft_rota_clu
#781d4f
.....
.....
.....
....0
...00
raft_rota_crd
#781d4f
00...
0....
.....
.....
.....
raft_rota_cld
#781d4f
...00
....0
.....
.....
.....

raft_rota_iru
#ad2f45 #c64539
.....
.....
.....
10...
11...
raft_rota_ilu
#ad2f45 #c64539
.....
.....
.....
...01
...11
raft_rota_ird
#ad2f45 #c64539
11...
10...
.....
.....
.....
raft_rota_ild
#ad2f45 #c64539
...11
...01
.....
.....
.....

raft_snek
#3b7d4f

raft_snek_bu 
#3b7d4f #63ab3f
.....
.....
.....
00000
11111
raft_snek_bl
#3b7d4f #63ab3f
...01
...01
...01
...01
...01
raft_snek_bd
#3b7d4f #63ab3f
11111
00000
.....
.....
.....
raft_snek_br
#3b7d4f #63ab3f
10...
10...
10...
10...
10...

raft_snek_cru
#2f5753
.....
.....
.....
0....
00...
raft_snek_clu
#2f5753
.....
.....
.....
....0
...00
raft_snek_crd
#2f5753
00...
0....
.....
.....
.....
raft_snek_cld
#2f5753
...00
....0
.....
.....
.....

raft_snek_iru
#3b7d4f #63ab3f
.....
.....
.....
10...
11...
raft_snek_ilu
#3b7d4f #63ab3f
.....
.....
.....
...01
...11
raft_snek_ird
#3b7d4f #63ab3f
11...
10...
.....
.....
.....
raft_snek_ild
#3b7d4f #63ab3f
...11
...01
.....
.....
.....

(LAND)

land
#404973 #686F99
10111
00000
11011
11011
00000

Land_bu
#404973
.....
.....
.....
00000
00000
land_bl
#404973
...00
...00
...00
...00
...00
Land_bd
#404973
00000
00000
.....
.....
.....
land_br
#404973
00...
00...
00...
00...
00...

land_fill
#404973 #686F99
10111
00000
11011
11011
00000

land_cru
#404973
.....
.....
.....
0....
00...
land_clu
#404973
.....
.....
.....
....0
...00
land_crd
#404973
00...
0....
.....
.....
.....
land_cld
#404973
...00
....0
.....
.....
.....

land_iru
#404973
.....
.....
.....
00...
00...
land_ilu
#404973
.....
.....
.....
...00
...00
land_ird
#404973
00...
00...
.....
.....
.....
land_ild
#404973
...00
...00
.....
.....
.....

(player, boxes)

player 
#ff8933 #e64539
00000
10000
11000
11100
11111
player_swim
#ff5277 #cc2f7b
00000
10000
11000
11100
11111

eyes_u
#f5ffe8 #3b7d4f
01.10
00.00
.....
.....
.....
eyes_d
#f5ffe8 #3b7d4f
.....
.....
00.00
01.10
.....
eyes_r
#f5ffe8 #3b7d4f
.....
.....
..00.
..01.
.....
eyes_l
#f5ffe8 #3b7d4f
.....
.....
.00..
.10..
.....
eyes_br
#f5ffe8 #3b7d4f
.....
.....
0....
1....
.....
eyes_bl
#f5ffe8 #3b7d4f
.....
.....
....0
....1
.....

cube_bu
#14182e
.....
.....
.....
.....
00000
cube_bl
#14182e
....0
....0
....0
....0
....0
cube_bd
#14182e
00000
.....
.....
.....
.....
cube_br
#14182e
0....
0....
0....
0....
0....


(BOXES)
==========================================================================
box_none
#8f4d57 #bd6a62 #52333f
00000
00220
02020
12201
11111

(move boxes will make shapes movable with a push)
box_move
#cf752b #f0b541
11011
10001
00000
10001
11011

(rota_active_m boxes will make shapes rotatable around them clockwise or counterclockwise)
box_rota
#e64539 #ff8933
00111
00001
10101
10000
11100

(snake boxes will make linear shapes move like a snake, starting from the box)
box_snek
#63ab3f #c8d45d
00000
10001
11011
01010
00000

box_snek_zzz
#63ab3f #c8d45d
00000
00000
11011
00000
00000

(stiks)
stik_h
#8f4d57 #14182e
.....
11111
10001
11111
.....

stik_v
#bd6a62 #14182e #52333f
.111.
.101.
.101.
.101.
.121.

stik_d
#14182e
.000.
.....
.....
.....
.....

==========================================================================

(collision happened! Show the cross to show where exactly.)
cross
#f5ffe8
0...0
00.00
.000.
00.00
0...0

(win)
goal_player
#f5ffe8
....0
...00
0.00.
000..
.0...
goal_box_none
#8f4d57 #bd6a62
....0
...00
1.00.
110..
.1...
goal_box_move
#ab5130 #cf752b
....0
...00
1.00.
110..
.1...
goal_box_rota
#ad2f45 #c64539
....0
...00
1.00.
110..
.1...
goal_box_snek
#3b7d4f #63ab3f
....0
...00
1.00.
110..
.1...
goal_won
#ffffff
....0
...00
0.00.
000..
.0...

(sinking animation)
sink_anim_1
#14182e40
sink_anim_2
#14182e95

==========================================================================

glue
#8f4d57 #bd6a62 #14182e
22222
11011
11011
11011
22222

glue_d
#14182e #14182e50
10001
11.11
.....
.....
.....

glue_v
#8f4d57 #bd6a62 #14182e
21112
21112
20002
21112
21112

holder
#14182e
.....
.000.
.0.0.
.000.
.....

arrow_u
#f0b541
.....
..0..
.000.
.....
.....
arrow_d
#f0b541
.....
.....
.000.
..0..
.....
arrow_l
#f0b541
.....
..0..
.00..
..0..
.....
arrow_r
#f0b541
.....
..0..
..00.
..0..
.....

LEGEND (f3)

(lvls)
. = background
# = lvl_wall

! = raft
l = land
g = glue

p = player and land and look_md

b = land and box_none

m = raft and box_move
r = raft and box_rota
s = raft and box_snek
(f = raft and box_flip)

↔ = stik_h and land
↕ = stik_v and land

h = holder and raft

i = holder and raft and box_none
j = holder and raft and box_move
k = holder and raft and box_rota
n = holder and raft and box_snek

1 = goal_player
2 = goal_box_move
3 = goal_box_rota
4 = goal_box_snek
5 = goal_box_none


(OBJECTS)
==========================================================================
floor     = raft or land
multiraft = raft or glue

box       = box_move or box_rota or box_snek or box_none
box_color = box_move or box_rota or box_snek
stik      = stik_h or stik_v
part      = box or stik (new solid items go here)
onfloor   = part or holder

goal      = goal_player or goal_box_move or goal_box_rota or goal_box_snek or goal_box_none


(VISUAL)
==========================================================================
(land and rafts)
land_b   = land_bu  or land_bd  or land_bl  or land_br  (border)
land_c   = land_cru or land_crd or land_clu or land_cld (corner)
land_i   = land_iru or land_ird or land_ilu or land_ild (inner)
land_vis = land_b or land_c or land_i or land_fill

raft_b   = raft_bu  or raft_bd  or raft_bl  or raft_br  (border)
raft_c   = raft_cru or raft_crd or raft_clu or raft_cld (corner)
raft_i   = raft_iru or raft_ird or raft_ilu or raft_ild (inner)
raft_vis = raft_b or raft_c or raft_i or raft_fill

raft_move_b   = raft_move_bu  or raft_move_bd  or raft_move_bl  or raft_move_br  (border)
raft_move_c   = raft_move_cru or raft_move_crd or raft_move_clu or raft_move_cld (corner)
raft_move_i   = raft_move_iru or raft_move_ird or raft_move_ilu or raft_move_ild (inner)
raft_move_vis = raft_move_b or raft_move_c or raft_move_i

raft_rota_b   = raft_rota_bu  or raft_rota_bd  or raft_rota_bl  or raft_rota_br  (border)
raft_rota_c   = raft_rota_cru or raft_rota_crd or raft_rota_clu or raft_rota_cld (corner)
raft_rota_i   = raft_rota_iru or raft_rota_ird or raft_rota_ilu or raft_rota_ild (inner)
raft_rota_vis = raft_rota_b or raft_rota_c or raft_rota_i

raft_snek_b   = raft_snek_bu  or raft_snek_bd  or raft_snek_bl  or raft_snek_br  (border)
raft_snek_c   = raft_snek_cru or raft_snek_crd or raft_snek_clu or raft_snek_cld (corner)
raft_snek_i   = raft_snek_iru or raft_snek_ird or raft_snek_ilu or raft_snek_ild (inner)
raft_snek_vis = raft_snek_b or raft_snek_c or raft_snek_i

(player/objects)
cube_b   = cube_bu or cube_br or cube_bl or cube_bd (also used for player)
stik_b   = stik_d
eyes_vis = eyes_u or eyes_d or eyes_r or eyes_l or eyes_br or eyes_bl
obj_vis  = cube_b or stik_b or eyes_vis or player_swim

(hints)
arrow = arrow_u or arrow_d or arrow_l or arrow_r

(next to floor)
glue_vis = glue_d or glue_v 

VISUALS = raft_vis or raft_move_vis or raft_rota_vis or raft_snek_vis or land_vis or obj_vis or glue_vis or shadow or hide or arrow
(hide before gameplay rules, create new after every turn)


(LOGIC)
==========================================================================
raft_type = raft_dead or raft_move or raft_rota or raft_snek (shape fill color with boxes)
look_m    = look_mu or look_md or look_mr or look_ml
raft_area = raft or raft_fill (looks like raft)

shadow_m      = raft_b or raft_c or raft_i or land_b or land_c or land_i or goal (these cast a shadow)
ripple_make_m = multiraft or player_swim

(collision)
check_m         = check_mu or check_md or check_ml or check_mr
check_between_m = check_vert or check_hori or check_both
obstacle        = floor or lvl_wall or player

(temporary objects in new position)
test_box   = test_box_move or test_box_rota or test_box_snek or test_box_none
test_stick = test_stik_h or test_stik_v
test       = test_box or test_raft or test_stick or test_glue or test_player or test_holder

(old pieces to remove when after temp objects are converted)
oldstuff  = multiraft or part or player or holder (ADD HERE)

sink_anim = sink_anim_1 or sink_anim_2

(rotation)
lvl_half    = lvl_half_u or lvl_half_l or lvl_half_r or lvl_half_d
lvl_half_lr = lvl_half_l or lvl_half_r
lvl_half_ud = lvl_half_u or lvl_half_d
rotate_dir  = rotate_cw or rotate_cc

recorded = recorded_u or recorded_r or recorded_d or recorded_l

lvl_quad   = lvl_quad_ru or lvl_quad_lu or lvl_quad_rd or lvl_quad_ld (quadrant markers around center_m)
lvl_line   = lvl_line_u or lvl_line_d or lvl_line_r or lvl_line_l     (line markers from center_m)
lvl_line_v = lvl_line_u or lvl_line_d
lvl_line_h = lvl_line_r or lvl_line_l

lvl_diaquad    = lvl_diaquad_u or lvl_diaquad_l or lvl_diaquad_r or lvl_diaquad_d (diagonal quadrant markers)
lvl_diaquad_v  = lvl_diaquad_u or lvl_diaquad_d
lvl_diaquad_h  = lvl_diaquad_l or lvl_diaquad_r

(snake)
sneksegment = snek_segment_v or snek_segment_h

(get rid of these after certain rule sections rules)
during_move  = pusher
during_rota  = rota_active_m or obstacle_m or center_m or lvl_half or rotate_dir or lvl_quad or lvl_line or lvl_dialine or lvl_diaquad or overlap_m or check_m or check_now
during_snek  = snaker or snek_body_m or snek_head_m or box_snek_zzz or snek_prev_m
during_mechanics = test or starter or active_m or local_m or outside_m or raft_type or holding_m



SOUNDS (f5)

sfx0 63417907 (push)
sfx1 65329507 (nope)
sfx2 56853700 (yay)
sfx3 78569907 (boat move)
sfx4 59716309 (boat turn)
sfx5 34042503 (boat snek)
sfx6 47626902 (explosion)
sfx7 94713705 (up hole)
sfx8 90055904 (into hole)
sfx9 72788709 (sinking)



COLLISIONLAYERS (f4)

(background)
background
wave
lvl_wall
shadow
wave_m
ripple
hide

(ground)
land
land_clu
land_cld
land_cru
land_crd
land_bu
land_bd
land_bl
land_br
land_ilu
land_ild
land_iru
land_ird
land_fill

raft
raft_clu
raft_cld
raft_cru
raft_crd
raft_bu
raft_bd
raft_bl
raft_br
raft_ilu
raft_ild
raft_iru
raft_ird
raft_fill

raft_type

raft_move_clu
raft_move_cld
raft_move_cru
raft_move_crd
raft_move_bu
raft_move_bd
raft_move_bl
raft_move_br
raft_move_ilu
raft_move_ild
raft_move_iru
raft_move_ird

raft_rota_clu
raft_rota_cld
raft_rota_cru
raft_rota_crd
raft_rota_bu
raft_rota_bd
raft_rota_bl
raft_rota_br
raft_rota_ilu
raft_rota_ild
raft_rota_iru
raft_rota_ird

raft_snek_clu
raft_snek_cld
raft_snek_cru
raft_snek_crd
raft_snek_bu
raft_snek_bd
raft_snek_bl
raft_snek_br
raft_snek_ilu
raft_snek_ild
raft_snek_iru
raft_snek_ird

glue_d
glue
glue_v

active_m
local_m
outside_m
raft_random_picked, raft_random_done

(box, stik, holder)
box, stik
cube_bu
cube_bd
cube_br
cube_bl
stik_d

box_random_picked
box_snek_zzz

(target)
holder
holding_m
goal
goal_won

(player)
player, test_player_swim
player_swim

eyes_vis

==========================================================================

(raft rules)
starter
raft_collided_m
test_raft, test_glue
test_player
test_box, test_stick
test_holder
animator

(move raft rules)
pusher

(rotation raft rules)
rota_active_m
obstacle_m
center_m
rotate_dir
lvl_half_l
lvl_half_r
lvl_half_u
lvl_half_d
lvl_line
lvl_quad
lvl_diaquad
recorded_u
recorded_d
recorded_r
recorded_l
rota_random_unpicked
rota_random_picked
newtile
newdone, newfill
once
newrun
overlap_m
lvl_dialine, lvl_dialine_m
check_hori
check_vert
check_both
check_now
check_mu
check_ml
check_mr
check_md
between

(snake raft rules)
snaker
snek_neck_m
snek_body_m
snek_head_m
sneksegment
snek_prev_m

(show on top of everything)
nosink, sink_anim
cross
arrow

(editor)
chapter
hey

look_m



RULES

(make ripple at current floor before movement and keep them until next turn)
[animator ripple] -> []
[ripple_make_m no ripple] -> [ripple_make_m ripple]

(animation)
[sink_anim_2] -> [no raft]     again sfx9
[sink_anim_1] -> [sink_anim_2] again

==========================================================================

[VISUALS] -> []

[goal_won goal] -> []



[chapter] -> message MOVES AND PUSHES (f6)

==========================================================================

(hide collision crosses and get rid of collision markers after next move)
[> player] [cross          ] -> [> player] []
[> player] [raft_collided_m] -> [> player] []

(reorient player)
up    [> player] [look_m] -> [> player] [look_mu]
down  [> player] [look_m] -> [> player] [look_md]
right [> player] [look_m] -> [> player] [look_mr]
left  [> player] [look_m] -> [> player] [look_ml]

(MOVES INTO SOLID OR NOTHING)
(movement -> 2 spaces teleportation)
==========================================================================

(move into lvl_wall)
[> player || lvl_wall] -> [stationary player || lvl_wall] sfx1 nosave

(move floor to floor)
[> player floor || floor no part] -> [floor || player floor] nosave

(move empty to empty / land)
[> player no floor || no obstacle] -> [ || player] sfx9 nosave

[> player no floor || land] -> [stationary player || land] sfx1 nosave

(move land to empty)
[> player land || no floor] -> [stationary player land || ] sfx1 nosave



(PUSHES)
(movement -> teleportation of boxes and player)
==========================================================================

(push part -> obstacle)
[> player floor || part no holder || part    ] -> [stationary player floor || part || part] sfx1 nosave
[> player floor || part no holder || no floor] -> [stationary player floor || part ||     ] sfx1 nosave

(push holder box not on raft)
[> player floor || no raft box holder] -> [stationary player floor || box holder] sfx1 nosave

==========================================================================

(push box  -> floor)
(push stik -> floor - without gap)
[> player floor || box no holder ||      floor] -> [floor || player ||      floor box ] sfx0
[> player floor || stik          |floor|      ] -> [floor || player |floor|       stik] sfx0

(push stik -> floor - one side at least cant glue)
[> player floor || stik no raft ||        ] -> [floor || player || stik] sfx0
[> player floor || stik         || no raft] -> [floor || player || stik] sfx0

(push stik to floor - gap is oriented wrong)
horizontal [> player floor || stik_h || ] -> [floor || player || floor stik_h] sfx0
vertical   [> player floor || stik_v || ] -> [floor || player || floor stik_v] sfx0

==========================================================================

(push stik into fitting gap)
horizontal [> player floor || stik_v || ] -> [floor || player |glue| floor ] sfx0 sfx8
vertical   [> player floor || stik_h || ] -> [floor || player |glue| floor ] sfx0 sfx8



(MOVES STARTING RAFTS)
(player move into holders, borders -> "starter" marker on rafts telling them to do action)
==========================================================================

(raft -> empty)
[> player raft || no floor] -> [stationary player raft > starter || ]
(raft -> holder box on same raft)
[> player raft |raft| raft box holder] -> [stationary player raft |raft| raft box holder > starter] sfx1

==========================================================================

(swimmer -> raft)
[> player no floor || raft] -> [stationary player outside_m || raft > starter] (makes markers)
(different floor -> holder box on raft)
[> player floor |no raft| raft box holder] -> [stationary player floor outside_m || raft box holder > starter] sfx1

(no raft type: error sound)
[starter no holder              raft no raft_type] -> [raft       ] sfx1
[starter    holder no box_color raft no raft_type] -> [raft holder] sfx1

(place new active and local markers)
[player outside_m] [> starter] [active_m] -> [player outside_m] [> starter] [no local_m]

[player outside_m] [> starter]            -> [player outside_m] [> starter active_m local_m]
[player outside_m] [local_m  | raft     ] -> [player outside_m] [local_m  | raft local_m active_m]
[player outside_m] [active_m | multiraft] -> [player outside_m] [active_m | multiraft    active_m]

(start wave_m)
[starter] -> [starter wave_m]




[chapter] -> message RAFTS (f7)

(MOVE EFFECT)
==========================================================================

(give whole shape push markers)
[> starter no holding_m raft_move] [active_m] -> [> starter           raft_move > pusher] [active_m > pusher]
[> starter    holding_m box_move ] [active_m] -> [> starter holding_m box_move  > pusher] [active_m > pusher]

(raft moved two tiles)
[> pusher raft || ] -> [> pusher raft || test_raft]
[> pusher glue || ] -> [> pusher glue || test_glue]

(check_m collision)
[starter] [test obstacle no active_m] -> [starter raft_collided_m] [obstacle] sfx1

(get rid of all push markers if collision)
[starter raft_collided_m] [pusher multiraft] -> [starter raft_collided_m] [multiraft]
[starter raft_collided_m] [test            ] -> [starter raft_collided_m] [         ]

(NO COLLISION)
(kill old tiles)
[starter no raft_collided_m] [pusher multiraft] -> [starter] [pusher]

(moved two tiles)
[> pusher player   || ] -> [> pusher || test_player  ]
[> pusher box_move || ] -> [> pusher || test_box_move]
[> pusher box_rota || ] -> [> pusher || test_box_rota]
[> pusher box_snek || ] -> [> pusher || test_box_snek]
[> pusher box_none || ] -> [> pusher || test_box_none]
[> pusher stik_h   || ] -> [> pusher || test_stik_h  ]
[> pusher stik_v   || ] -> [> pusher || test_stik_v  ]
[> pusher holder   || ] -> [> pusher || test_holder  ]

(player in water)
[> starter pusher no raft_collided_m] [player no floor || ] -> [> starter] [ || test_player]

(place moved tiles)
[test_raft] -> [raft] sfx3
[test_glue] -> [glue]

[test_player  ] -> [player  ] 
[test_box_none] -> [box_none]
[test_box_move] -> [box_move]
[test_box_rota] -> [box_rota]
[test_box_snek] -> [box_snek]
[test_stik_h  ] -> [stik_h  ]
[test_stik_v  ] -> [stik_v  ]
[test_holder  ] -> [holder  ]

[during_move] -> []



(ROTATE EFFECT)
================================================================
(find the center of rotation in the local active area)
[> starter no holding_m raft_rota] [local_m box_rota] -> [> starter raft_rota] [local_m box_rota center_m]
[> starter    holding_m box_rota ] []                 -> message Add rotation handles in!

(stop if the move is useless)
[parallel starter raft_rota | ... | center_m] -> [raft_rota no wave_m | ... | ] sfx1
[starter raft_rota center_m] -> [raft_rota no wave_m] sfx1

(find every obstacle outside the rotating area)
[center_m] [obstacle no active_m] -> [center_m] [obstacle obstacle_m]


(clockwise or counterclockwise? ============================================)

[center_m] -> [center_m lvl_half_l lvl_half_u lvl_half_r lvl_half_d]

(how to move in each quarter around center_m for clockwise)
up    [lvl_half_u | ] -> [lvl_half_u | lvl_half_u lvl_line_u]
down  [lvl_half_d | ] -> [lvl_half_d | lvl_half_d lvl_line_d]
left  [lvl_half_l | ] -> [lvl_half_l | lvl_half_l lvl_line_l]
right [lvl_half_r | ] -> [lvl_half_r | lvl_half_r lvl_line_r]
horizontal [lvl_half_u no center_m | ] -> [lvl_half_u | lvl_half_u]
horizontal [lvl_half_d no center_m | ] -> [lvl_half_d | lvl_half_d]
vertical   [lvl_half_l no center_m | ] -> [lvl_half_l | lvl_half_l]
vertical   [lvl_half_r no center_m | ] -> [lvl_half_r | lvl_half_r]
[center_m lvl_half] -> [center_m]


(play direction -> rotation direction)
right [> starter lvl_half_u] [center_m] -> [> starter lvl_half_u] [center_m rotate_cw]
left  [> starter lvl_half_d] [center_m] -> [> starter lvl_half_d] [center_m rotate_cw]
up    [> starter lvl_half_l] [center_m] -> [> starter lvl_half_l] [center_m rotate_cw]
down  [> starter lvl_half_r] [center_m] -> [> starter lvl_half_r] [center_m rotate_cw]

left  [> starter lvl_half_u] [center_m] -> [> starter lvl_half_u] [center_m rotate_cc]
right [> starter lvl_half_d] [center_m] -> [> starter lvl_half_d] [center_m rotate_cc]
down  [> starter lvl_half_l] [center_m] -> [> starter lvl_half_l] [center_m rotate_cc]
up    [> starter lvl_half_r] [center_m] -> [> starter lvl_half_r] [center_m rotate_cc]



(setup quadrants, lvl_dialinegonal quadrants =======================================)
[lvl_half_u lvl_half_r] -> [lvl_quad_ru]
[lvl_half_d lvl_half_r] -> [lvl_quad_rd]
[lvl_half_d lvl_half_l] -> [lvl_quad_ld]
[lvl_half_u lvl_half_l] -> [lvl_quad_lu]

vertical   [ | center_m | ] -> [lvl_dialine_m | center_m | lvl_dialine_m]
horizontal [ | lvl_dialine_m | ] -> [lvl_dialine   |               | lvl_dialine  ]

startloop
up    [lvl_quad_lu lvl_dialine | ] -> [lvl_quad_lu lvl_dialine | lvl_dialine_m] 
up    [lvl_quad_ru lvl_dialine | ] -> [lvl_quad_ru lvl_dialine | lvl_dialine_m] 
down  [lvl_quad_ld lvl_dialine | ] -> [lvl_quad_ld lvl_dialine | lvl_dialine_m] 
down  [lvl_quad_rd lvl_dialine | ] -> [lvl_quad_rd lvl_dialine | lvl_dialine_m] 
left  [lvl_quad_lu lvl_dialine_m | ] -> [lvl_quad_lu lvl_dialine_m | lvl_dialine] 
left  [lvl_quad_ld lvl_dialine_m | ] -> [lvl_quad_ld lvl_dialine_m | lvl_dialine] 
right [lvl_quad_ru lvl_dialine_m | ] -> [lvl_quad_ru lvl_dialine_m | lvl_dialine] 
right [lvl_quad_rd lvl_dialine_m | ] -> [lvl_quad_rd lvl_dialine_m | lvl_dialine] 
endloop

[lvl_dialine_m] -> []

(fill)
[lvl_line_r] -> [lvl_line_r lvl_diaquad_r]
[lvl_line_l] -> [lvl_line_l lvl_diaquad_l]
[lvl_line_u] -> [lvl_line_u lvl_diaquad_u]
[lvl_line_d] -> [lvl_line_d lvl_diaquad_d]
[lvl_diaquad_r | lvl_quad no lvl_dialine] -> [lvl_diaquad_r | lvl_quad lvl_diaquad_r]
[lvl_diaquad_l | lvl_quad no lvl_dialine] -> [lvl_diaquad_l | lvl_quad lvl_diaquad_l]
[lvl_diaquad_u | lvl_quad no lvl_dialine] -> [lvl_diaquad_u | lvl_quad lvl_diaquad_u]
[lvl_diaquad_d | lvl_quad no lvl_dialine] -> [lvl_diaquad_d | lvl_quad lvl_diaquad_d]


(MOVE TILES===============================================================)
[center_m] [no center_m active_m] -> [center_m] [active_m rota_random_unpicked]

startloop

(new pick)
random [center_m newrun] [rota_random_unpicked] -> [center_m newrun] [rota_random_picked] 

(remember type of this pick in the center_m)
[center_m newrun] [rota_random_picked player  ] -> [center_m newrun test_player  ] [rota_random_picked player  ]
[center_m newrun] [rota_random_picked box_none] -> [center_m newrun test_box_none] [rota_random_picked box_none]
[center_m newrun] [rota_random_picked box_move] -> [center_m newrun test_box_move] [rota_random_picked box_move]
[center_m newrun] [rota_random_picked box_rota] -> [center_m newrun test_box_rota] [rota_random_picked box_rota]
[center_m newrun] [rota_random_picked box_snek] -> [center_m newrun test_box_snek] [rota_random_picked box_snek]
[center_m newrun] [rota_random_picked stik_h  ] -> [center_m newrun test_stik_h  ] [rota_random_picked stik_h  ]
[center_m newrun] [rota_random_picked stik_v  ] -> [center_m newrun test_stik_v  ] [rota_random_picked stik_v  ]
[center_m newrun] [rota_random_picked holder  ] -> [center_m newrun test_holder  ] [rota_random_picked holder  ]
[center_m newrun] [rota_random_picked raft    ] -> [center_m newrun test_raft    ] [rota_random_picked raft    ]
[center_m newrun] [rota_random_picked glue    ] -> [center_m newrun test_glue    ] [rota_random_picked glue    ]

(mark collision check_between_m type on original tile pos)
[center_m newrun] [rota_random_picked lvl_diaquad_v] -> [center_m newrun] [rota_random_picked lvl_diaquad_v check_hori between] 
[center_m newrun] [rota_random_picked lvl_diaquad_h] -> [center_m newrun] [rota_random_picked lvl_diaquad_h check_vert between]
[center_m newrun] [rota_random_picked no lvl_diaquad] -> [center_m newrun] [rota_random_picked check_both]

(move to middle and count)
up    [lvl_quad_ld rota_random_picked | ] -> [lvl_quad_ld recorded_u | rota_random_picked]
down  [lvl_quad_ru rota_random_picked | ] -> [lvl_quad_ru recorded_d | rota_random_picked]
left  [lvl_quad_rd rota_random_picked | ] -> [lvl_quad_rd recorded_l | rota_random_picked]
right [lvl_quad_lu rota_random_picked | ] -> [lvl_quad_lu recorded_r | rota_random_picked]

up    [lvl_line_d rota_random_picked | ] -> [lvl_line_d recorded_u | rota_random_picked]
down  [lvl_line_u rota_random_picked | ] -> [lvl_line_u recorded_d | rota_random_picked]
left  [lvl_line_r rota_random_picked | ] -> [lvl_line_r recorded_l | rota_random_picked]
right [lvl_line_l rota_random_picked | ] -> [lvl_line_l recorded_r | rota_random_picked]

(NEW TILE from middle, not during unfinished moving)
[center_m newrun rota_random_picked] -> [center_m newrun newtile] 

(move to position based on count)
random [recorded_u] [newtile] -> [] [> newtile]
 left  [rotate_cw] [moving newtile | ] -> [rotate_cw] [ | newtile]
 right [rotate_cc] [moving newtile | ] -> [rotate_cc] [ | newtile]
random [recorded_d] [newtile] -> [] [> newtile] 
 right [rotate_cw] [moving newtile | ] -> [rotate_cw] [ | newtile]
 left  [rotate_cc] [moving newtile | ] -> [rotate_cc] [ | newtile]
random [recorded_r] [newtile] -> [] [> newtile] 
 up    [rotate_cw] [moving newtile | ] -> [rotate_cw] [ | newtile]
 down  [rotate_cc] [moving newtile | ] -> [rotate_cc] [ | newtile]
random [recorded_l] [newtile] -> [] [> newtile] 
 down  [rotate_cw] [moving newtile | ] -> [rotate_cw] [ | newtile]
 up    [rotate_cc] [moving newtile | ] -> [rotate_cc] [ | newtile]

(re-add keepgoing only if not done - directions left)
[center_m] -> [center_m newrun]
[recorded] [newrun] -> [recorded] []

(collision check_between_m type in final position)
[center_m newrun] [newtile  lvl_diaquad_v] -> [center_m newrun] [newtile lvl_diaquad_v check_hori between]
[center_m newrun] [newtile  lvl_diaquad_h] -> [center_m newrun] [newtile lvl_diaquad_h check_vert between]
[center_m newrun] [newtile no lvl_diaquad] -> [center_m newrun] [newtile check_both]

(find overlap)
horizontal [center_m newrun] [check_hori | ] -> [center_m newrun] [check_hori | check_hori]
vertical   [center_m newrun] [check_vert | ] -> [center_m newrun] [check_vert | check_vert]
[center_m newrun] [lvl_quad_ld check_vert check_hori] -> [center_m newrun] [lvl_quad_ld check_vert check_hori check_mu check_mr]
[center_m newrun] [lvl_quad_lu check_vert check_hori] -> [center_m newrun] [lvl_quad_lu check_vert check_hori check_md check_mr]
[center_m newrun] [lvl_quad_rd check_vert check_hori] -> [center_m newrun] [lvl_quad_rd check_vert check_hori check_mu check_ml]
[center_m newrun] [lvl_quad_ru check_vert check_hori] -> [center_m newrun] [lvl_quad_ru check_vert check_hori check_md check_ml]

(expand area that needs to be checked)
up    [check_mu | no between] -> [check_mu | check_mu]
down  [check_md | no between] -> [check_md | check_md]
left  [check_ml | no between] -> [check_ml | check_ml]
right [check_mr | no between] -> [check_mr | check_mr]
[check_m] -> [check_now]

(find between)
[check_both | | check_both]       -> [check_both | check_now | check_both]
[check_both | | ... | check_both] -> [check_both | check_now | ... | check_both]

(done)
[center_m newrun] [between]         -> [center_m newrun] []
[center_m newrun] [check_between_m] -> [center_m newrun] []

(where will the new player, etc go?)
[center_m newrun test_stik_v] [newtile] -> [center_m newrun] [newtile test_stik_h] (swap)
[center_m newrun test_stik_h] [newtile] -> [center_m newrun] [newtile test_stik_v] (swap)
[center_m newrun test]        [newtile] -> [center_m newrun] [newtile test]

(done tiles ready to replace)
[center_m newrun] [newtile] -> [center_m newrun] [newdone]

endloop


(COLLISION=============================================================)

[center_m] [newdone obstacle_m] -> [center_m raft_collided_m] [newdone obstacle_m overlap_m] sfx1

(tempcollision objects, are any left? then collision)
[check_now no obstacle_m] -> []
[center_m] [check_now active_m] -> [center_m                ] [active_m ]
[center_m] [check_now]          -> [center_m raft_collided_m] [overlap_m] sfx1

(spread crosses)
[center_m raft_collided_m] -> [center_m raft_collided_m cross] sfx1
[cross || ] -> [cross || cross]
(delete unneccesary)
[cross no overlap_m] -> []

(stop everything after collision)
[center_m raft_collided_m] [newdone ]        -> [center_m raft_collided_m] []
[center_m raft_collided_m] [starter ]        -> [center_m raft_collided_m] []
[center_m raft_collided_m] [test    ]        -> [center_m raft_collided_m] []
[center_m raft_collided_m] [active_m]        -> [center_m raft_collided_m] [] (!Does this make sense??)

(PLACE==================================================================)

(delete old ground and things on it)
[center_m] [no center_m active_m oldstuff] -> [center_m] [active_m]

(move ground)
[newdone test_raft] -> [raft]
[newdone test_glue] -> [glue]

(move floor player)
[center_m no raft_collided_m] [player no active_m] -> [center_m] [test_player_swim]

[> starter] [test_player_swim || no obstacle] -> [> starter] [                  || player  ]
[> starter] [test_player_swim ||    obstacle] -> [> starter] [stationary player || obstacle] sfx1

(move player and stuff)
[test_player   ] -> [player  ]
[test_box_none ] -> [box_none]
[test_box_move ] -> [box_move]
[test_box_rota ] -> [box_rota]
[test_box_snek ] -> [box_snek]
[test_stik_h   ] -> [stik_h  ]
[test_stik_v   ] -> [stik_v  ]
[test_holder   ] -> [holder  ]

(done!)
[center_m no raft_collided_m] -> [] sfx4

[raft_collided_m] [wave_m] -> [raft_collided_m] []

[during_rota] -> []



(SNAKE EFFECT)
(WIP)
==========================================================================

(start at snek active_m box, re-assign that it is the head of the snake)
[> starter no holding_m raft_snek] [local_m box_snek no box_snek_zzz] -> [> starter          raft_snek] [local_m box_snek > snaker snek_head_m snek_prev_m]
[> starter    holding_m box_snek local_m no box_snek_zzz]             -> [> starter holding_m box_snek   local_m          > snaker snek_head_m snek_prev_m]

(check_m future head position for collision)
[> snaker || obstacle] -> [raft_collided_m || obstacle cross] sfx1

(remember that the player is in water and show possible spot)
[> snaker] [player no raft_snek || ] -> [> snaker] [test_player_swim || test_player]

(create direction markers every tile 
 building up from head, pointing at previous)
startloop
[snek_prev_m snaker | active_m no snaker] -> [snaker | active_m < snaker snek_prev_m]
endloop 

(add one more in front)
[snek_head_m > snaker | no snaker] -> [snek_head_m > snaker | > snaker]

(place test parts)
[> snaker player   || ] -> [> snaker || test_player  ]
[> snaker box_move || ] -> [> snaker || test_box_move]
[> snaker box_rota || ] -> [> snaker || test_box_rota]
[> snaker box_snek || ] -> [> snaker || test_box_snek]
[> snaker box_none || ] -> [> snaker || test_box_none]
[> snaker holder   || ] -> [> snaker || test_holder  ]

[> snaker stik_h || no snaker]       -> [> snaker ||        test_stik_h]
[> snaker stik_v || no snaker]       -> [> snaker ||        test_stik_v]
[> snaker stik_h || parallel snaker] -> [> snaker || snaker test_stik_h]
[> snaker stik_v || parallel snaker] -> [> snaker || snaker test_stik_v]
(swap these)
[> snaker stik_h || orthogonal snaker] -> [> snaker || snaker test_stik_v]
[> snaker stik_v || orthogonal snaker] -> [> snaker || snaker test_stik_h]

(single move, these appear on off tiles)
[> snaker raft | ] -> [> snaker | test_raft]
[> snaker glue | ] -> [> snaker | test_glue]

(convert all back)
[snaker] [active_m multiraft] -> [snaker] []
(2nd move)
[> snaker test_raft | ] -> [> snaker | raft]
[> snaker test_glue | ] -> [> snaker | glue]

[test_player_swim || test_player obstacle] -> [player || obstacle]
[test_player_swim] -> [] sfx1 (ALWAYS make a sound when pushing into side)

[test_player  ] -> [player  ]
[test_box_none] -> [box_none]
[test_box_move] -> [box_move]
[test_box_rota] -> [box_rota]
[test_stik_h  ] -> [stik_h  ]
[test_stik_v  ] -> [stik_v  ]
[test_holder  ] -> [holder  ]
[test_box_snek] -> [box_snek] sfx5

[raft_collided_m] [wave_m] -> [raft_collided_m] []

[during_snek] -> []



(GLUE)
==========================================================================

(get rid of unneeded)
[raft | glue | raft] -> [raft | test_glue | raft]
[glue] -> []
[test_glue] -> [glue]
 


(WIN)
==========================================================================

[player goal_player] -> [goal_won] sfx2

[box_move goal_box_move] -> [goal_won] sfx2
[box_rota goal_box_rota] -> [goal_won] sfx2
[box_snek goal_box_snek] -> [goal_won] sfx2



(AFTER MOVE)
==========================================================================

[during_mechanics] -> []





[chapter] -> message ART (f8)

(GIVE RAFTS BORDERS)
==========================================================================

(raft)
up    [raft    | no raft] -> [raft    | raft_bu ]
left  [raft    | no raft] -> [raft    | raft_bl ]
down  [raft    | no raft] -> [raft    | raft_bd ]
right [raft    | no raft] -> [raft    | raft_br ]
up    [raft_br | no raft] -> [raft_br | raft_cru]
up    [raft_bl | no raft] -> [raft_bl | raft_clu]
down  [raft_br | no raft] -> [raft_br | raft_crd]
down  [raft_bl | no raft] -> [raft_bl | raft_cld]
[raft_br raft_bu] -> [raft_br raft_bu raft_iru]
[raft_br raft_bd] -> [raft_br raft_bd raft_ird]
[raft_bl raft_bu] -> [raft_bl raft_bu raft_ilu]
[raft_bl raft_bd] -> [raft_bl raft_bd raft_ild]

(inside between four rafts)
[raft_bu raft_bd raft_br raft_bl] -> [raft_bu raft_bd raft_br raft_bl raft_fill]

(land)
up    [land    | no land] -> [land    |  Land_bu]
left  [land    | no land] -> [land    |  land_bl]
down  [land    | no land] -> [land    |  Land_bd]
right [land    | no land] -> [land    |  land_br]
up    [land_br | no land] -> [land_br | land_cru]
up    [land_bl | no land] -> [land_bl | land_clu]
down  [land_br | no land] -> [land_br | land_crd]
down  [land_bl | no land] -> [land_bl | land_cld]
[land_br Land_bu] -> [land_br Land_bu land_iru]
[land_br Land_bd] -> [land_br Land_bd land_ird]
[land_bl Land_bu] -> [land_bl Land_bu land_ilu]
[land_bl Land_bd] -> [land_bl Land_bd land_ild]

(inside between four land)
[Land_bu Land_bd land_br land_bl] -> [Land_bu Land_bd land_br land_bl land_fill]

(player)
up    [player | ] -> [player | cube_bu]
left  [player | ] -> [player | cube_bl]
down  [player | ] -> [player | cube_bd]
right [player | ] -> [player | cube_br]
[player] [look_mu] -> [player eyes_u] [look_mu]
[player] [look_md] -> [player eyes_d] [look_md]
[player] [look_mr] -> [player eyes_r] [look_mr]
[player] [look_ml] -> [player eyes_l] [look_ml]

right [eyes_r | ] -> [eyes_r | eyes_br]
left  [eyes_l | ] -> [eyes_l | eyes_bl]

(things)
up    [box | ] -> [box | cube_bu]
left  [box | ] -> [box | cube_bl]
down  [box | ] -> [box | cube_bd]
right [box | ] -> [box | cube_br]

down [stik_v | ] -> [stik_v | stik_d]

(glue)
down     [glue | no multiraft no obstacle] -> [glue | glue_d]
vertical [glue | multiraft] -> [glue glue_v | multiraft]

(shadow & lvl_wall)
[shadow_m no sink_anim] -> [shadow_m shadow]
[lvl_wall] -> [lvl_wall hide]

(wave)
[wave_m | ] -> [wave_m | wave_m]

[   wave wave_m] -> [    ]
[no wave wave_m] -> [wave]



(SINKING)
==========================================================================

(sinking raft)
(nosink)
[land   || raft] -> [land   || raft nosink]
[nosink || raft] -> [nosink || raft nosink]
[nosink |  raft] -> [nosink |  raft nosink]

[raft no nosink no sink_anim ] -> [raft sink_anim_1] sfx9
[raft sink_anim_1 | shadow_m] -> [raft sink_anim_1 | shadow_m sink_anim_1] again

[nosink] -> []

(remove things that were on sinking platforms, this is also at the top of the rules?)
[onfloor no floor] -> []

(player)
[player sink_anim] -> [player player_swim sink_anim]
[player no floor ] -> [player player_swim          ]



(FIND INDIVIDUAL RAFTS, GIVE COLOR)
==========================================================================

(preparation: check_between_m out where snakeheads are (correct snek placement))
startloop
random [raft box_snek    no snek_body_m | multiraft               ] -> [raft box_snek snek_head_m | multiraft snek_neck_m]
       [raft snek_head_m no snek_body_m | multiraft no snek_neck_m] -> [raft snek_body_m          | multiraft            ]
       [raft snek_head_m no snek_body_m]                            -> [raft snek_head_m snek_body_m]
       [snek_neck_m] -> []
endloop

startloop
(select next raft)
random [raft no raft_random_done no raft_random_picked] -> [raft raft_random_picked]
[raft raft_random_picked | raft] -> [raft raft_random_picked | raft raft_random_picked]

(raft with color starting from one color box that's not on a holder, fill later)
random [raft_random_picked raft box_color no holder] -> [raft_random_picked raft box_color box_random_picked]
[box_random_picked box_move raft] -> [box_random_picked box_move raft raft_move]
[box_random_picked box_rota raft] -> [box_random_picked box_rota raft raft_rota]

(always use snake in head position if avaliable)
random [raft_random_picked box_random_picked box_snek no snek_head_m] [raft_random_picked box_snek snek_head_m] -> [raft_random_picked box_snek] [raft_random_picked box_snek box_random_picked snek_head_m]
[box_random_picked box_snek raft] -> [box_random_picked box_snek raft raft_snek]
(all sneks are in the wrong place, let them sleep)
[box_random_picked box_snek no snek_head_m raft] -> [box_random_picked box_snek box_snek_zzz raft]

(next)
[raft_random_picked] -> [raft_random_done]
endloop

[raft_random_done] -> []
[box_random_picked] -> []



(SPREAD ACTIVE / LOCAL)
==========================================================================

(from player on raft)
[raft player] -> [raft player active_m local_m]
[multiraft active_m | multiraft] -> [multiraft active_m | multiraft active_m]
[raft local_m | raft] -> [raft local_m | raft local_m]



(SPREAD RAFT COLOR)
==========================================================================

startloop
(spread color)
[raft_area raft_move | raft_area no box_color] -> [raft_area raft_move | raft_area raft_move]
[raft_area raft_rota | raft_area no box_color] -> [raft_area raft_rota | raft_area raft_rota]
[raft_area raft_snek | raft_area no box_color] -> [raft_area raft_snek | raft_area raft_snek]

[raft_area raft_move | raft_area box_color holder] -> [raft_area raft_move | raft_area box_color holder raft_move]
[raft_area raft_rota | raft_area box_color holder] -> [raft_area raft_rota | raft_area box_color holder raft_rota]
[raft_area raft_snek | raft_area box_color holder] -> [raft_area raft_snek | raft_area box_color holder raft_snek]

(when multiple are allowed)
[raft_area raft_move | raft_area box_move               ] -> [raft_area raft_move | raft_area raft_move box_move]
[raft_area raft_snek | raft_area box_snek no snek_head_m] -> [raft_area raft_snek | raft_area raft_snek box_snek box_snek_zzz]
endloop



(KILL BOXES)
==========================================================================

(start dead: raft boxes still without color? must be mixed or too many!)
[box_color raft no raft_type no holder] -> [box_color raft raft_dead]

(snake makes no sense!)
horizontal [multiraft | multiraft | multiraft] -> [multiraft | multiraft snek_segment_h | multiraft]
vertical   [multiraft | multiraft | multiraft] -> [multiraft | multiraft snek_segment_v | multiraft]
horizontal [multiraft | snek_segment_v] -> [multiraft | box_snek_zzz] 
vertical   [multiraft | snek_segment_h] -> [multiraft | box_snek_zzz] 
[box_snek_zzz | multiraft no box_snek] -> [box_snek_zzz | box_snek_zzz multiraft]
[box_snek_zzz no box_snek] -> []
[sneksegment] -> []

(fill dead)
[raft_dead | raft_area] -> [raft_dead | raft_area raft_dead]
[raft_dead box_color]   -> [raft_dead box_none]

(holder has box in it)
[holder box] -> [holder box holding_m] 


(arrows)
up    [player || holding_m no box_snek_zzz] -> [player |arrow_u| holding_m]
left  [player || holding_m no box_snek_zzz] -> [player |arrow_l| holding_m]
down  [player || holding_m no box_snek_zzz] -> [player |arrow_d| holding_m]
right [player || holding_m no box_snek_zzz] -> [player |arrow_r| holding_m]

up    [player raft_type || no obstacle] -> [player raft_type |arrow_u| ]
left  [player raft_type || no obstacle] -> [player raft_type |arrow_l| ]
down  [player raft_type || no obstacle] -> [player raft_type |arrow_d| ]
right [player raft_type || no obstacle] -> [player raft_type |arrow_r| ]

up    [player no floor || raft_type] -> [player |arrow_u| raft_type]
left  [player no floor || raft_type] -> [player |arrow_l| raft_type]
down  [player no floor || raft_type] -> [player |arrow_d| raft_type]
right [player no floor || raft_type] -> [player |arrow_r| raft_type]




(COLOR RAFT BORDERS)
==========================================================================

(move)
up    [raft_move    | no raft_move] -> [raft_move    | raft_move_bu ]
left  [raft_move    | no raft_move] -> [raft_move    | raft_move_bl ]
down  [raft_move    | no raft_move] -> [raft_move    | raft_move_bd ]
right [raft_move    | no raft_move] -> [raft_move    | raft_move_br ]
up    [raft_move_br | no raft_move] -> [raft_move_br | raft_move_cru]
up    [raft_move_bl | no raft_move] -> [raft_move_bl | raft_move_clu]
down  [raft_move_br | no raft_move] -> [raft_move_br | raft_move_crd]
down  [raft_move_bl | no raft_move] -> [raft_move_bl | raft_move_cld]
[raft_move_br raft_move_bu] -> [raft_move_br raft_move_bu raft_move_iru]
[raft_move_br raft_move_bd] -> [raft_move_br raft_move_bd raft_move_ird]
[raft_move_bl raft_move_bu] -> [raft_move_bl raft_move_bu raft_move_ilu]
[raft_move_bl raft_move_bd] -> [raft_move_bl raft_move_bd raft_move_ild]

(rotate)
up    [raft_rota    | no raft_rota] -> [raft_rota    | raft_rota_bu ]
left  [raft_rota    | no raft_rota] -> [raft_rota    | raft_rota_bl ]
down  [raft_rota    | no raft_rota] -> [raft_rota    | raft_rota_bd ]
right [raft_rota    | no raft_rota] -> [raft_rota    | raft_rota_br ]
up    [raft_rota_br | no raft_rota] -> [raft_rota_br | raft_rota_cru]
up    [raft_rota_bl | no raft_rota] -> [raft_rota_bl | raft_rota_clu]
down  [raft_rota_br | no raft_rota] -> [raft_rota_br | raft_rota_crd]
down  [raft_rota_bl | no raft_rota] -> [raft_rota_bl | raft_rota_cld]
[raft_rota_br raft_rota_bu] -> [raft_rota_br raft_rota_bu raft_rota_iru]
[raft_rota_br raft_rota_bd] -> [raft_rota_br raft_rota_bd raft_rota_ird]
[raft_rota_bl raft_rota_bu] -> [raft_rota_bl raft_rota_bu raft_rota_ilu]
[raft_rota_bl raft_rota_bd] -> [raft_rota_bl raft_rota_bd raft_rota_ild]

(snake)
up    [raft_snek    | no raft_snek] -> [raft_snek    | raft_snek_bu ]
left  [raft_snek    | no raft_snek] -> [raft_snek    | raft_snek_bl ]
down  [raft_snek    | no raft_snek] -> [raft_snek    | raft_snek_bd ]
right [raft_snek    | no raft_snek] -> [raft_snek    | raft_snek_br ]
up    [raft_snek_br | no raft_snek] -> [raft_snek_br | raft_snek_cru]
up    [raft_snek_bl | no raft_snek] -> [raft_snek_bl | raft_snek_clu]
down  [raft_snek_br | no raft_snek] -> [raft_snek_br | raft_snek_crd]
down  [raft_snek_bl | no raft_snek] -> [raft_snek_bl | raft_snek_cld]
[raft_snek_br raft_snek_bu] -> [raft_snek_br raft_snek_bu raft_snek_iru]
[raft_snek_br raft_snek_bd] -> [raft_snek_br raft_snek_bd raft_snek_ird]
[raft_snek_bl raft_snek_bu] -> [raft_snek_bl raft_snek_bu raft_snek_ilu]
[raft_snek_bl raft_snek_bd] -> [raft_snek_bl raft_snek_bd raft_snek_ild]

(start some animations here)
[ripple no ripple_make_m] -> [animator ripple] again


WINCONDITIONS (f9)

no goal
no sink_anim
  
LEVELS (f0)

(snake test)
#####################
#...................#
#.........lll.......#
#...................#
#.....l.!!!!n.......#
#.....l.!...........#
#.....p.!...........#
#...................#
#...................#
#...................#
#.............l.....#
#.............l.....#
#.............l.....#
#...................#
#.......lll.........#
#...................#
#...................#
#...................#
#...................#
#...................#
#####################

#####################
#...................#
#...................#
#...................#
#...lll.....lllll...#
#...l.l.....l.l.l...#
#...lll.h!r.lllll...#
#...l...!...........#
#...p...!.......!...#
#...............!...#
#.............m!!...#
#...................#
#...................#
#...................#
#.....ll↔l↔l↔.......#
#...................#
#...................#
#...................#
#...................#
#...................#
#####################

#####################
#...................#
#.m.lll.i!i!i!i!i!!.#
#.!.l.l...........!.#
#.!.llp.!!!.......i.#
#.!.l.l.!.!.......!.#
#.j.lll.m!!.......i.#
#...l.l...........!.#
#...lll...!!!.....i.#
#...l.l...!.!.....!.#
#...lll...r!!.....i.#
#...l.l...........!.#
#...lll...........i.#
#...l.l...........!.#
#...lll...........i.#
#...l.l.............#
#...lll.!!!.......1.#
#.........!.........#
#.........!!s.......#
#...................#
#####################

#####################
#...................#
#.!!i!i!i!i!i!i!i!!.#
#.!...............!.#
#.i.pll.!!!.......i.#
#.!.l.l.!.!.......!.#
#.i.lll.m!!.......i.#
#.!...............!.#
#.!!i!i!i!i!i.....i.#
#.!...............!.#
#.i.......!!!.....i.#
#.!.......!.!.....!.#
#.i.......!!!.....i.#
#.!...............!.#
#.i.!!!...........i.#
#.!...!...........!.#
#.i...!.......i.1.i.#
#.!...........!...!.#
#.!!i!i!i!i!i!!!i!!.#
#...................#
#####################

(hard version
...................
.!!i!i!i!i!i!i!i!!.
.!...............!.
.i.pll.m!!.......i.
.!.l.l.!.!.......!.
.i.lll.!!!.......i.
.!...............!.
.!!i!i!i!i!i.....i.
.!...............!.
.i.......!!!.....i.
.!.......!.!.....!.
.i.......!!!.....i.
.!...............!.
.i.!!!...........i.
.!...!...........!.
.i...!.......i.1.i.
.!...........!...!.
.!!i!i!i!i!i!!!i!!.
...................
)

###############
#.............#
#.lll.j!m.!!!.#
#.l.l.!.!.!.!.#
#.pll.!!!.!!!.#
#...l.........#
#...l.........#
#...l.........#
#...l.........#
#.............#
#.....2.2.....#
#.............#
#.............#
#.............#
###############

###############
#.............#
#.i.p.m.r.n...#
#...s.g.g.g...#
#.sss.p.ggg...#
#.s.s.........#
#.ssb.........#
#.s.s.........#
#.sss.1.......#
#.s.s.........#
#.iss.........#
#.............#
#.............#
#.............#
###############
