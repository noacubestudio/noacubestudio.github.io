title dis pontibus II remix
homepage by noa, date ver. 01-14-a
background_color #050819
text_color #e19e10

run_rules_on_level_start

(
CURRENT TODO

- test for weird bugs, maybe not allow huge shapes?
- maybe something to switch box color/ switch with box

FLOOR
• Shapes
  • Get color from boxes
  • Connected to energy: won't sink
  • Players and boxes can't move off them
• Geysir
  • Energy source keeping everything connected afloat
  • Swimming players turn into regular players on this
  • Single floor piece and player spawn, doesn't move
• Walls?
  • On top of shapes
  • Solid, but move with shapes
• Glue
  • ???

BOXES
• Can move multiple in a row?
• Move box
  • whole shape moves
• Rotate box
  • rotate around box 
  • when in holder, gets handle
  • if handle has to be turned, but can't rotate
    still turn handle
• Snake box
  • if snake shape: move in direction
• Shift box
  • moves just a row
  • useful for disconnecting/ splitting/ sinking as well
• Mirror box?
  • mirror in move axis, across box point
• Mistake box (combination)
  • after you pushed multiple boxes into same shape,
  • they all turn into these

OBJECTS
• Holders
  • sometimes with objects in them already
  • grab boxes, so you can have multiple per shape
  • pushing won't move boxes out, but activate them
  • move into goals to empty holders again
• Fish powerup
  • if you were on a sinking platform, you can start swimming
  • push shapes from the sides, activates their box type

GOALS
• all box types
)


========
OBJECTS
========

(markers)
active
transparent
local
transparent

selshape
transparent
doneshape
transparent

boxindiv
transparent
onebox
transparent

(shapes move)
rplay
transparent
lplay
transparent
uplay
transparent
dplay
transparent

lowplayer
transparent

testwood
transparent
testplayer
transparent
testpink
transparent
testblue
transparent
testgreen
transparent
testbomb
transparent
teststone
transparent
testspotpink
transparent
testspotblue
transparent
testspotgreen
transparent
testhstick
transparent
testvstick
transparent
testglue
transparent
testwall
transparent

(MOVE)
rpush
transparent
lpush
transparent
upush
transparent
dpush
transparent


(ROTATE)
rotate
transparent
norotate
transparent

rcan
transparent
lcan
transparent
ucan
transparent
dcan
transparent
center
transparent
clockdir
transparent
counterdir
transparent

uline
transparent
dline
transparent
rline
transparent
lline
transparent

unpicked
transparent
picked
transparent
newtile
transparent
newdone
black
newfill
transparent

un
transparent
rn
transparent
ln
transparent
dn
transparent

ruq
transparent
luq
transparent
rdq
transparent
ldq
transparent

collided
transparent
overlap
transparent

once
transparent
newrun
transparent

dia
transparent
newdia
transparent
udia
transparent
ddia
transparent
rdia
transparent
ldia
transparent

hfind
transparent
vfind
transparent
bfind
transparent

checkhere
transparent
ucheck
transparent
dcheck
transparent
rcheck
transparent
lcheck
transparent

between
transparent

(snake)
snekneck
transparent
snekhead
transparent

usnek
transparent
dsnek
transparent
rsnek
transparent
lsnek
transparent
vsegment
transparent
hsegment
transparent

prev
transparent

nosnake
transparent

(bomb)
vcut
transparent
hcut
transparent

(waves)
tide
transparent

(HEY!)
hey
red

(---------------------------------------------)

background
#1a2055
.....
.0...
.....
...0.
.....

wave
#050819 #1a2055
00000
00010
00000
01000
00000

shadow
#050819

barrier
black

(wood)

wood
#4b131e

uwood 
#8b3226 #1a2055
.....
.....
.....
00000
00000
lwood
#8b3226 #1a2055
...00
...00
...00
...00
...00
dwood
#780b35 #1a2055
00000
00000
.....
.....
.....
rwood
#780b35 #1a2055
00...
00...
00...
00...
00...

fillwood
#4b131e

ruwood
#86121f #1a2055
.....
.....
.....
0....
00...
luwood
#86121f #1a2055
.....
.....
.....
....0
...00
rdwood
#86121f #1a2055
00...
0....
.....
.....
.....
ldwood
#86121f #1a2055
...00
....0
.....
.....
.....

iruwood
#86121f #4b131e
.....
.....
.....
00...
10...
iluwood
#86121f #4b131e
.....
.....
.....
...00
...01
irdwood
#86121f #4b131e
10...
00...
.....
.....
.....
ildwood
#86121f #4b131e
...01
...00
.....
.....
.....

(stone)

stone
#2d303a

ustone
#5b706c
.....
.....
.....
00000
00000
lstone
#5b706c
...00
...00
...00
...00
...00
dstone
#465158
00000
00000
.....
.....
.....
rstone
#465158
00...
00...
00...
00...
00...

fillstone
#2d303a

rustone
#4c5f64
.....
.....
.....
0....
00...
lustone
#4c5f64
.....
.....
.....
....0
...00
rdstone
#4c5f64
00...
0....
.....
.....
.....
ldstone
#4c5f64
...00
....0
.....
.....
.....

irustone
#4c5f64 #2d303a
.....
.....
.....
00...
10...
ilustone
#4c5f64 #2d303a
.....
.....
.....
...00
...01
irdstone
#4c5f64 #2d303a
10...
00...
.....
.....
.....
ildstone
#4c5f64 #2d303a
...01
...00
.....
.....
.....

tex1
#5b706c50
.....
.....
0000.
.....
.....
tex2
#5b706c50
..0..
..00.
000.0
..0..
.....
tex3
#5b706c50
.....
..0..
..0..
.....
..0..

(wall)

wall
#5b706c

tuwall
#6f8078
00000
.....
.....
.....
.....
tdwall
#6f8078
.....
.....
.....
.....
00000
trwall
#6f8078
....0
....0
....0
....0
....0
tlwall
#6f8078
0....
0....
0....
0....
0....

truwall
#6f8078
....0
.....
.....
.....
.....
tluwall
#6f8078
0....
.....
.....
.....
.....
trdwall
#6f8078
.....
.....
.....
.....
....0
tldwall
#6f8078
.....
.....
.....
.....
0....

uwall
#5b706c
.....
.....
.....
00000
00000
lwall
#5b706c
...00
...00
...00
...00
...00
dwall
#465158
00000
00000
.....
.....
.....
rwall
#465158
00...
00...
00...
00...
00...

fillwall
#5b706c

ruwall
#4c5f64
.....
.....
.....
0....
00...
luwall
#4c5f64
.....
.....
.....
....0
...00
rdwall
#323941
00...
0....
.....
.....
.....
ldwall
#4c5f64
...00
....0
.....
.....
.....

iruwall
#4c5f64 #5b706c #465158
.....
.....
.....
20...
01...

iluwall
#4c5f64 #5b706c
.....
.....
.....
...01
...10
irdwall
#4c5f64 #465158
01...
10...
.....
.....
.....
ildwall
#4c5f64 #5b706c #465158
...20
...01
.....
.....
.....

shwall
#05081930
.....
.....
00000
.....
.....
svwall
#05081930
..0..
..0..
..0..
..0..
..0..
sruwall
#05081930
.....
.....
0....
.0...
..0..
sluwall
#05081930
.....
.....
....0
...0.
..0..
srdwall
#05081930
..0..
.0...
0....
.....
.....
sldwall
#05081930
..0..
...0.
....0
.....
.....

wooddead
#692c38
.....
.0.0.
..0..
.0.0.
.....

woodpink
#531c4b

ruwoodpink
#531c4b
.....
.....
.....
.....
0....
luwoodpink
#531c4b
.....
.....
.....
.....
....0
rdwoodpink
#531c4b
0....
.....
.....
.....
.....
ldwoodpink
#531c4b
....0
.....
.....
.....
.....

woodblue
#2b2555

ruwoodblue
#2b2555
.....
.....
.....
.....
0....
luwoodblue
#2b2555
.....
.....
.....
.....
....0
rdwoodblue
#2b2555
0....
.....
.....
.....
.....
ldwoodblue
#2b2555
....0
.....
.....
.....
.....

woodgreen
#1b2b37
ruwoodgreen
#1b2b37
.....
.....
.....
.....
0....
luwoodgreen
#1b2b37
.....
.....
.....
.....
....0
rdwoodgreen
#1b2b37
0....
.....
.....
.....
.....
ldwoodgreen
#1b2b37
....0
.....
.....
.....
.....


player 
#e19e10 #050819
00000
01001
01001
00000
00000

uyel
#eedd60
.....
.....
.....
.....
00000
lyel
#eedd60
....0
....0
....0
....0
....0
dyel
#c85b0e
00000
.....
.....
.....
.....
ryel
#c85b0e
0....
0....
0....
0....
0....

(in water)
wplayer 
#e19e10 #050819
01001
01001
00000
00000
00000

lwyel
#eedd60 #1a2055
....0
....0
....0
....0
....1
dwyel
#1a2055
00000
00000
.....
.....
.....
rwyel
#c85b0e #1a2055
0....
0....
0....
0....
1....

(move boxes will make shapes movable with a push)
boxpink
#4b28c4 #4415ba
11111
10001
10001
10001
11111

boxpinkon
#693fe1 #4415ba
11111
10001
10001
10001
11111

upink
#db59fe
.....
.....
.....
.....
00000
lpink
#db59fe
....0
....0
....0
....0
....0
dpink
#8628d2
00000
.....
.....
.....
.....
rpink
#8628d2
0....
0....
0....
0....
0....

(rotate boxes will make shapes rotatable around them clockwise or counterclockwise)
boxblue
#00588b #09457d #1494a8
11111
12221
12021
12221
11111

boxblueon
#00588b #09457d white
11111
12221
12021
12221
11111

ublue
#28cf91
.....
.....
.....
.....
00000
lblue
#28cf91
....0
....0
....0
....0
....0
dblue
#1494a8
00000
.....
.....
.....
.....
rblue
#1494a8
0....
0....
0....
0....
0....

(snake boxes will make linear shapes move like a snake, starting from the box)
boxgreen
#005e52 #004953 #08a852
11111
10001
22022
10001
11111

boxgreenon
#005e52 #004953 white
11111
12002
12002
10001
11111

ugreen
#74db5b
.....
.....
.....
.....
00000
lgreen
#74db5b
....0
....0
....0
....0
....0
dgreen
#08a852
00000
.....
.....
.....
.....
rgreen
#08a852
0....
0....
0....
0....
0....

(bomb)
bomb (makes all ground dead, combine with other boxes for explosions if on stone)
#4a1228 #240d16 #b62909
11111
12021
10201
12021
11111

bombon
#4a1228 #240d16 white
11111
12021
10201
12021
11111

ubomb
#ff7425
.....
.....
.....
..0..
00000
lbomb
#ff7425
....0
....0
...00
....0
....0
dbomb
#b62909
00000
..0..
.....
.....
.....
rbomb
#b62909
0....
0....
00...
0....
0....

(sticks)
hstick
#a47e57 #3c1a1a
.....
00000
00000
11111
.....

vstick
#a47e57 #3c1a1a
.001.
.001.
.001.
.001.
.001.

ustick
#925b39
.....
.....
.....
.....
.00..
dstick
#3c1a1a
.000.
.....
.....
.....
.....
lstick
#925b39 #3c1a1a
.....
....0
....0
....1
.....
rstick
#925b39 #3c1a1a
.....
0....
0....
1....
.....

(overlay for boxes that can't be used)
boxdead
#33111170
00000
00000
00000
00000
00000

(collision happened! Show the cross to show where exactly.)
cross
#FF000090
00.00
00000
.000.
00000
00.00

ucross
#FF000090
.....
.....
.....
.....
0...0
lcross
#FF000090
....0
.....
.....
.....
....0
dcross
#FF000090
0...0
.....
.....
.....
.....
rcross
#FF000090
0....
.....
.....
.....
0....

sink
#05081980
0.0.0
.0.0.
0.0.0
.0.0.
0.0.0
nosink
transparent

(win)
goalplayer
#eedd6050
.....
.0.0.
..0..
.0.0.
.....
goalpink
#db59fe50
.....
.0.0.
..0..
.0.0.
.....
goalblue
#28cf9150
.....
.0.0.
..0..
.0.0.
.....
goalgreen
#74db5b50
.....
.0.0.
..0..
.0.0.
.....
goalwin
#ffffff
.....
.0.0.
..0..
.0.0.
.....

hole
#050819 #1a2055
00000
01010
01110
01010
00000

hide
#050819

uhole
#465158
.....
.....
.....
.....
00000
lhole
#465158
....0
....0
....0
....0
....0
dhole
#5b706c
00000
.....
.....
.....
.....
rhole
#5b706c
0....
0....
0....
0....
0....

spotpink
#282141 #4415ba
00000
00100
01010
00100
00000

stonepink
#282141

rustonepink
#282141
.....
.....
.....
.....
0....
lustonepink
#282141
.....
.....
.....
.....
....0
rdstonepink
#282141
0....
.....
.....
.....
.....
ldstonepink
#282141
....0
.....
.....
.....
.....

spotblue
#1E3641 #1494a8
00000
01110
01010
01110
00000

stoneblue
#1E3641

rustoneblue
#1E3641
.....
.....
.....
.....
0....
lustoneblue
#1E3641
.....
.....
.....
.....
....0
rdstoneblue
#1E3641
0....
.....
.....
.....
.....
ldstoneblue
#1E3641
....0
.....
.....
.....
.....

spotgreen
#1B3734 #08a852
00000
00000
11011
00000
00000

stonegreen
#1B3734

rustonegreen
#1B3734
.....
.....
.....
.....
0....
lustonegreen
#1B3734
.....
.....
.....
.....
....0
rdstonegreen
#1B3734
0....
.....
.....
.....
.....
ldstonegreen
#1B3734
....0
.....
.....
.....
.....

sremove
transparent

stonedead
#465158
.....
.0.0.
..0..
.0.0.
.....

glue
#925b39 #642D1F
00100
00100
00100
00100
00100

glueside
#3c1a1a #05081930
10001
11.11
.....
.....
.....

gluewide
#925b39 #642D1F
00000
00000
11111
00000
00000

=======
LEGEND
=======

(levels)
. = background
# = barrier
g = wood
s = stone
* = player and stone
x = hole and stone
m = boxpink and wood
r = boxblue and wood
n = boxgreen and wood
f = goalplayer
h = goalpink
i = goalblue
j = goalgreen
k = bomb and wood
t = spotpink and stone
u = spotblue and stone
v = spotgreen and stone
a = hstick and wood
b = vstick and wood
c = glue
d = wall and stone

(BASICS)
floor = wood or stone
connected = floor or glue

box = boxpink or boxblue or boxgreen or bomb
stick = hstick or vstick
normalbox = boxpink or boxblue or boxgreen

part = box or stick
onfloor = part or hole or wall
solid = part or wall
goal = goalplayer or goalpink or goalblue or goalgreen

spot = spotpink or spotblue or spotgreen
objpink = boxpink or spotpink
objblue = boxblue or spotblue
objgreen = boxgreen or spotgreen


(DECO)
(around wood shapes:)
bwood = uwood or dwood or lwood or rwood         (wood shape border)
cwood = ruwood or rdwood or luwood or ldwood     (corner)
iwood = iruwood or irdwood or iluwood or ildwood (inner)
visibleg = wood or fillwood                      (looks wood)
(around stone shapes)
bstone = ustone or dstone or lstone or rstone         (stone ground border)
cstone = rustone or rdstone or lustone or ldstone     (corner)
istone = irustone or irdstone or ilustone or ildstone (inner)
visibles = stone or fillstone                         (looks stone)
(around walls)
bwall = uwall or dwall or lwall or rwall        
cwall = ruwall or rdwall or luwall or ldwall    
iwall = iruwall or irdwall or iluwall or ildwall
swall = shwall or svwall or sruwall or srdwall or sluwall or sldwall
(on walls)
twall = tuwall or tdwall or trwall or tlwall
tcwall = truwall or trdwall or tluwall or tldwall
visiblew = wall or fillwall 

(around objects)
byel = uyel or dyel or lyel or ryel           (player)
bwyel = dwyel or rwyel or lwyel               (water player)
face = wplayer
bpink = upink or dpink or lpink or rpink      (push boxes)
bblue = ublue or dblue or lblue or rblue      (rotate boxes)
bgreen = ugreen or dgreen or lgreen or rgreen (snake boxes)
bcross = ucross or dcross or lcross or rcross (collision crosses)
bbomb = ubomb or dbomb or lbomb or rbomb      (bomb boxes)
bstick = ustick or dstick or lstick or rstick (sticks)
(floor)
wcolor = wooddead or woodpink or woodblue or woodgreen              (shape fill color with boxes)
scolor = stonepink or stoneblue or stonegreen or stonedead
floorpink = woodpink or stonepink
floorblue = woodblue or stoneblue
floorgreen = woodgreen or stonegreen

ipink  = ruwoodpink  or luwoodpink  or rdwoodpink  or ldwoodpink    (inner pink move shape)
iblue  = ruwoodblue  or luwoodblue  or rdwoodblue  or ldwoodblue    (inner blue rotate shape)
igreen = ruwoodgreen or luwoodgreen or rdwoodgreen or ldwoodgreen   (inner green rotate shape)

ispink  = rustonepink  or lustonepink  or rdstonepink  or ldstonepink    (inner pink move shape)
isblue  = rustoneblue  or lustoneblue  or rdstoneblue  or ldstoneblue    (inner blue rotate shape)
isgreen = rustonegreen or lustonegreen or rdstonegreen or ldstonegreen   (inner green rotate shape)

(ADD)
tex = tex1 or tex2 or tex3                                               (texture details)
boxon = boxblueon or boxgreenon	or bombon or boxpinkon	                 (boxes that are enabled)
(holes)
bhole = uhole or dhole or lhole or rhole                                 (hole borders in stone ground)
(shadow)
castshadow = bwood or cwood or iwood or bstone or cstone or istone or byel
hidethis = hole or barrier

(show this art from current level at the end of turn, also includes sinking etc.)
redraw = bwood or byel or bblue or bpink  or bgreen or fillwood or cwood or iwood or shadow or wcolor or active or boxindiv or boxdead or bstone or cstone or istone or fillstone or sink or tex or bcross or ipink or iblue or igreen or hide or bhole or bbomb or boxon or scolor or ispink or isblue or isgreen or onebox or snekhead or bstick or local or nosnake or glueside or gluewide or face or bwyel or bwall or cwall or iwall or twall or tcwall or fillwall or swall


(LOGIC)
(player move)
play = rplay or uplay or dplay or lplay     (player moved here)
vplay = uplay or dplay
hplay = rplay or lplay

(move shape)
push = rpush or upush or dpush or lpush     (this ground will move)
testbox = testpink or testblue or testgreen or testbomb
teststick = testhstick or testvstick
testspot = testspotpink or testspotgreen or testspotblue
test = testbox or testwood or teststone or teststick or testspot or testglue or testplayer or testwall

(rotation push)
canmov = rcan or ucan or dcan or lcan
rotdir = clockdir or counterdir
vcan = ucan or dcan
hcan = rcan or lcan
newmove = un or rn or dn or ln
(quadrant markers)
quad = ruq or luq or rdq or ldq
line = uline or dline or rline or lline
vline = uline or dline
hline = rline or lline

diaquad = udia or ldia or rdia or ddia
vdia = udia or ddia
hdia = ldia or rdia
(collision)
check = ucheck or dcheck or lcheck or rcheck
find = vfind or hfind or bfind
obstacle = floor or barrier or player
(old pieces)
oldstuff = connected or onfloor or player

(snake push)
snekmov = usnek or dsnek or rsnek or lsnek
hsnek = rsnek or lsnek
vsnek = usnek or dsnek
segment = vsegment or hsegment

(bomb)
cut = hcut or vcut

(remove these after each colors' rules)
remov = push or test or snekmov or cut or check or checkhere or overlap or prev or rotate or center or norotate or canmov or rotdir or quad or line or dia or diaquad

=======
SOUNDS
=======

sfx0 63417907 (push)
sfx1 65329507 (nope)
sfx2 56853700 (yay)
sfx3 78569907 (boat move)
sfx4 59716309 (boat turn)
sfx5 34042503 (boat snek)
sfx6 47626902 (explosion)
sfx7 94713705 (up hole)
sfx8 90055904 (into hole)
sfx9 72788709 (sinking)
================
COLLISIONLAYERS
================

background
wave
barrier
shadow
tide

stone
lustone
ldstone
rustone
rdstone
ustone
dstone
lstone
rstone
ilustone
ildstone
irustone
irdstone
fillstone
scolor

hole
hide

sremove
spot

wood
luwood
ldwood
ruwood
rdwood
uwood
dwood
lwood
rwood
iluwood
ildwood
iruwood
irdwood
fillwood
wcolor
luwoodpink
ldwoodpink
ruwoodpink
rdwoodpink
luwoodblue
ldwoodblue
ruwoodblue
rdwoodblue
luwoodgreen
ldwoodgreen
ruwoodgreen
rdwoodgreen

tex

lustonepink
ldstonepink
rustonepink
rdstonepink
lustoneblue
ldstoneblue
rustoneblue
rdstoneblue
lustonegreen
ldstonegreen
rustonegreen
rdstonegreen

glueside

active
local
selshape, doneshape

glue
gluewide

shwall
svwall
sluwall
sldwall
sruwall
srdwall

box, stick
boxon

player, lowplayer
wplayer

boxdead
boxindiv
onebox

uyel
dyel
ryel
lyel
dwyel
rwyel
lwyel

upink
dpink
rpink
lpink
ublue
dblue
rblue
lblue
ugreen
dgreen
rgreen
lgreen
ubomb
dbomb
rbomb
lbomb
ustick
dstick
rstick
lstick

wall
luwall
ldwall
ruwall
rdwall
uwall
dwall
lwall
rwall
iluwall
ildwall
iruwall
irdwall

tuwall
tdwall
trwall
tlwall
truwall
tluwall
trdwall
tldwall
fillwall

goal
goalwin

play
collided
testwood, teststone, testglue
testplayer
testbox, teststick, testwall
testspot

(move)
push

(rotation)
rotate
norotate
center
rotdir
ucan
dcan
rcan
lcan
line
quad
diaquad
un
dn
rn
ln
unpicked
picked
newtile
newdone, newfill
once
newrun
overlap
dia, newdia
hfind
vfind
bfind
checkhere
ucheck
lcheck
rcheck
dcheck
between

(snake)
snekneck
snekhead
snekmov
segment
prev
nosnake

(bomb)
cut

(show on top of everything)
nosink, sink
hey

cross
ucross
dcross
lcross
rcross
uhole
dhole
lhole
rhole

======
RULES     
======     

========================
( #   # #### #  # #### )
( ## ## #  # #  # #    )
( # # # #  # #  # ###  )
( #   # #  # #  # #    )
( #   # ####  ##  #### )
========================

(player tries to move on sinking shape)
[> player sink] -> cancel
(other shapes sink)
[> player no sink] [sink] -> [> player no sink] [no wood] sfx9
[onfloor no floor] -> []
(hide collision crosses and remove collision markers after next move)
[> player] [cross]      -> [> player] []
[> player] [collided]   -> [> player] []

(MOVE)
(move into barrier)
[> player || barrier] -> [stationary player || barrier] sfx1
(move into wall)
[> player floor || wall] -> [stationary player floor || wall] sfx1

(move floor to floor)
[> player floor no hole || hole  no part] -> [floor || player hole ] sfx8 
[> player floor no hole || floor no solid] -> [floor || player floor] nosave
(move from hole)
[> player hole || floor no part] -> [hole || player floor] sfx7
[> player hole || no part      ] -> [hole || player      ] 

(move empty to empty)
[> player no floor || no obstacle]  -> [ || player] sfx9 nosave
(...to hole)
[> player no floor || no part hole] -> [ || player hole] sfx9 nosave
(...to stone)
[> player no floor || stone] -> [stationary player || stone] sfx1


(PUSH)
(push part to floor)
[> player floor || boxpink  || floor no solid] -> [floor || player || floor boxpink ] sfx0
[> player floor || boxblue  || floor no solid] -> [floor || player || floor boxblue ] sfx0
[> player floor || boxgreen || floor no solid] -> [floor || player || floor boxgreen] sfx0
[> player floor || bomb     || floor no solid] -> [floor || player || floor bomb    ] sfx0
(sticks)
[> player floor || hstick | floor | floor no solid] -> [floor || player | floor | floor hstick] sfx0
[> player floor || vstick | floor | floor no solid] -> [floor || player | floor | floor vstick] sfx0
horizontal [> player floor || hstick | no floor | floor] -> [floor || player || floor hstick] sfx0
vertical   [> player floor || vstick | no floor | floor] -> [floor || player || floor vstick] sfx0
horizontal [> player floor || vstick | no floor | floor] -> [floor || player | glue | floor] sfx0 sfx8
vertical   [> player floor || hstick | no floor | floor] -> [floor || player | glue | floor] sfx0 sfx8

(push part to part)
[> player floor || normalbox      || solid]     -> [player floor || normalbox || solid] sfx1
[> player floor || bomb no bombon || solid]     -> [player floor || bomb      || solid] sfx1
horizontal [> player floor || bomb bombon || box] -> [floor || player | vcut | ] sfx6
vertical   [> player floor || bomb bombon || box] -> [floor || player | hcut | ] sfx6
[> player floor || bomb bombon || wall] -> [floor || player || ] sfx6


(push part to empty)
[> player floor || part || no floor] -> [stationary player floor || part || ] sfx1


(SHAPE)
(move empty from ground)
right [> player floor no hole || no floor] -> [floor stationary player rplay || ]
up    [> player floor no hole || no floor] -> [floor stationary player uplay || ]
left  [> player floor no hole || no floor] -> [floor stationary player lplay || ]
down  [> player floor no hole || no floor] -> [floor stationary player dplay || ]

(move empty into wood)
right [> player no floor || wood] -> [stationary player || rplay active local wood]
up    [> player no floor || wood] -> [stationary player || uplay active local wood]
left  [> player no floor || wood] -> [stationary player || lplay active local wood]
down  [> player no floor || wood] -> [stationary player || dplay active local wood]

(stop shape move! no color or dead)
[play wood  no wcolor] -> [wood] sfx1
[play stone no scolor] -> [stone] sfx1
[play wooddead]        -> [] sfx1
(start tide)
[play] -> [play tide]

(TRANSFORM)
(winning)
[goalwin goal] -> []

(hole to spot)
[boxpink  hole] -> [spotpink ]
[boxblue  hole] -> [spotblue ]
[boxgreen hole] -> [spotgreen]
[bomb     hole] -> [sremove  ]
(spread remove for bomb)
[visibles sremove | visibles] -> [visibles sremove | visibles sremove]
[visibles sremove] -> [no onfloor]

(spread local and active if player is in void)
[player no floor] [local  | floor    ] -> [player] [local  | floor     local]
[player no floor] [active | connected] -> [player] [active | connected active]


======================
( #### ### #  # #  # )
( #  #  #  ## # # #  )
( #  #  #  # ## ###  )
( ####  #  #  # #  # )
( #    ### #  # #  # )
======================

(give whole shape push markers)
[rplay floorpink] [active] -> [rplay floorpink rpush] [active rpush]
[lplay floorpink] [active] -> [lplay floorpink lpush] [active lpush]
[uplay floorpink] [active] -> [uplay floorpink upush] [active upush]
[dplay floorpink] [active] -> [dplay floorpink dpush] [active dpush]

(ground moved two tiles)
right [rpush wood  || ] -> [rpush wood  || testwood ]
left  [lpush wood  || ] -> [lpush wood  || testwood ]
up    [upush wood  || ] -> [upush wood  || testwood ]
down  [dpush wood  || ] -> [dpush wood  || testwood ]
right [rpush stone || ] -> [rpush stone || teststone]
left  [lpush stone || ] -> [lpush stone || teststone]
up    [upush stone || ] -> [upush stone || teststone]
down  [dpush stone || ] -> [dpush stone || teststone]
right [rpush glue  || ] -> [rpush glue  || testglue ]
left  [lpush glue  || ] -> [lpush glue  || testglue ]
up    [upush glue  || ] -> [upush glue  || testglue ]
down  [dpush glue  || ] -> [dpush glue  || testglue ]

(check collision)
[play] [test obstacle no active] -> [play collided] [obstacle] sfx1

(remove all push markers if collision)
[play collided] [push connected] -> [play collided] [connected]
[play collided] [test]           -> [play collided] []

(NO COLLISION)
(kill old tiles)
[play no collided] [push connected] -> [play] [push]

(box moved two tiles)
right [rpush boxpink  || ] -> [rpush || testpink ]
left  [lpush boxpink  || ] -> [lpush || testpink ]
up    [upush boxpink  || ] -> [upush || testpink ]
down  [dpush boxpink  || ] -> [dpush || testpink ]
right [rpush boxblue  || ] -> [rpush || testblue ]
left  [lpush boxblue  || ] -> [lpush || testblue ]
up    [upush boxblue  || ] -> [upush || testblue ]
down  [dpush boxblue  || ] -> [dpush || testblue ]
right [rpush boxgreen || ] -> [rpush || testgreen]
left  [lpush boxgreen || ] -> [lpush || testgreen]
up    [upush boxgreen || ] -> [upush || testgreen]
down  [dpush boxgreen || ] -> [dpush || testgreen]
right [rpush bomb     || ] -> [rpush || testbomb ]
left  [lpush bomb     || ] -> [lpush || testbomb ]
up    [upush bomb     || ] -> [upush || testbomb ]
down  [dpush bomb     || ] -> [dpush || testbomb ]

(wall moved two tiles)
right [rpush wall || ] -> [rpush || testwall]
left  [lpush wall || ] -> [lpush || testwall]
up    [upush wall || ] -> [upush || testwall]
down  [dpush wall || ] -> [dpush || testwall]

(stick moved two tiles)
right [rpush hstick || ] -> [rpush || testhstick]
left  [lpush hstick || ] -> [lpush || testhstick]
up    [upush hstick || ] -> [upush || testhstick]
down  [dpush hstick || ] -> [dpush || testhstick]
right [rpush vstick || ] -> [rpush || testvstick]
left  [lpush vstick || ] -> [lpush || testvstick]
up    [upush vstick || ] -> [upush || testvstick]
down  [dpush vstick || ] -> [dpush || testvstick]

(spot moved two tiles)
right [rpush spotpink  || ] -> [rpush || testspotpink ]
left  [lpush spotpink  || ] -> [lpush || testspotpink ]
up    [upush spotpink  || ] -> [upush || testspotpink ]
down  [dpush spotpink  || ] -> [dpush || testspotpink ]
right [rpush spotblue  || ] -> [rpush || testspotblue ]
left  [lpush spotblue  || ] -> [lpush || testspotblue ]
up    [upush spotblue  || ] -> [upush || testspotblue ]
down  [dpush spotblue  || ] -> [dpush || testspotblue ]
right [rpush spotgreen || ] -> [rpush || testspotgreen]
left  [lpush spotgreen || ] -> [lpush || testspotgreen]
up    [upush spotgreen || ] -> [upush || testspotgreen]
down  [dpush spotgreen || ] -> [dpush || testspotgreen]

(player moved two tiles)
right [rplay push no collided] [player || ] -> [rplay] [ || testplayer]
left  [lplay push no collided] [player || ] -> [lplay] [ || testplayer]
up    [uplay push no collided] [player || ] -> [uplay] [ || testplayer]
down  [dplay push no collided] [player || ] -> [dplay] [ || testplayer]

(place moved tiles)
[testwood     ] -> [wood ] sfx3
[teststone    ] -> [stone] sfx3 
[testglue     ] -> [glue ]

[testplayer   ] -> [player   ]
[testpink     ] -> [boxpink  ]
[testblue     ] -> [boxblue  ]
[testgreen    ] -> [boxgreen ]
[testbomb     ] -> [bomb     ]
[testwall     ] -> [wall     ]
[testspotpink ] -> [spotpink ]
[testspotblue ] -> [spotblue ]   
[testspotgreen] -> [spotgreen]   
[testhstick   ] -> [hstick   ]
[testvstick   ] -> [vstick   ]

[remov] -> []


=======================
( ###  #    #  # #### )
( # #  #    #  # #    )
( #### #    #  # ###  )
( #  # #    #  # #    )
( #### #### #### #### )
=======================

(find the center of rotation in the local active area)
[play floorblue] [local boxblue no stone] -> [play floorblue] [local boxblue  center]
[play floorblue] [local spotblue]         -> [play floorblue] [local spotblue center]
(stop of the move is useless)
horizontal [hplay floorblue | ... | center] -> [floorblue no tide| ... | ] sfx1
vertical   [vplay floorblue | ... | center] -> [floorblue no tide| ... | ] sfx1

(find all active floor)
[center] [no center active connected] -> [center] [active connected rotate]
(find every obstacle outside the rotating area)
[center] [obstacle no rotate] -> [center] [obstacle norotate]


(clockwise or counterclockwise? ============================================)

[center] -> [center ucan rcan dcan lcan]

(how to move in each quarter around center for clockwise)
up    [rcan | ] -> [rcan | rcan uline]
down  [lcan | ] -> [lcan | lcan dline]
left  [ucan | ] -> [ucan | ucan lline]
right [dcan | ] -> [dcan | dcan rline]
horizontal [rcan no center | ] -> [rcan | rcan]
horizontal [lcan no center | ] -> [lcan | lcan]
vertical   [ucan no center | ] -> [ucan | ucan]
vertical   [dcan no center | ] -> [dcan | dcan]

(play direction -> rotation direction)
[rplay rcan] [center] -> [rplay rcan] [center clockdir]
[lplay lcan] [center] -> [lplay lcan] [center clockdir]
[uplay ucan] [center] -> [uplay ucan] [center clockdir]
[dplay dcan] [center] -> [dplay dcan] [center clockdir]

[rplay lcan] [center] -> [rplay lcan] [center counterdir]
[lplay rcan] [center] -> [lplay rcan] [center counterdir]
[uplay dcan] [center] -> [uplay dcan] [center counterdir]
[dplay ucan] [center] -> [dplay ucan] [center counterdir]

[center canmov] -> [center]


(setup quadrants, diagonal quadrants =======================================)
[rcan dcan] -> [ruq]
[lcan dcan] -> [rdq]
[lcan ucan] -> [ldq]
[rcan ucan] -> [luq]

vertical [ | center | ] -> [newdia | center | newdia]
horizontal [ | newdia | ] -> [ dia | | dia ]
startloop
up    [luq dia | ] -> [luq dia | newdia] 
up    [ruq dia | ] -> [ruq dia | newdia] 
down  [ldq dia | ] -> [ldq dia | newdia] 
down  [rdq dia | ] -> [rdq dia | newdia] 
left  [luq newdia | ] -> [luq newdia | dia] 
left  [ldq newdia | ] -> [ldq newdia | dia] 
right [ruq newdia | ] -> [ruq newdia | dia] 
right [rdq newdia | ] -> [rdq newdia | dia] 
endloop
[newdia] -> []

(fill)
[rline] -> [rline rdia]
[lline] -> [lline ldia]
[uline] -> [uline udia]
[dline] -> [dline ddia]
[rdia | quad no dia] -> [rdia | quad rdia]
[ldia | quad no dia] -> [ldia | quad ldia]
[udia | quad no dia] -> [udia | quad udia]
[ddia | quad no dia] -> [ddia | quad ddia]


(MOVE TILES=========================================================================)
[rotate] -> [rotate unpicked]

startloop

(new pick)
random [center newrun] [unpicked] -> [center newrun] [picked] 

(remember type of this pick in the center)
[center newrun] [picked player   ] -> [center newrun testplayer   ] [picked player   ]
[center newrun] [picked boxpink  ] -> [center newrun testpink     ] [picked boxpink  ]
[center newrun] [picked boxblue  ] -> [center newrun testblue     ] [picked boxblue  ]
[center newrun] [picked boxgreen ] -> [center newrun testgreen    ] [picked boxgreen ]
[center newrun] [picked bomb     ] -> [center newrun testbomb     ] [picked bomb     ]
[center newrun] [picked wall     ] -> [center newrun testwall     ] [picked wall     ]
[center newrun] [picked spotpink ] -> [center newrun testspotpink ] [picked spotpink ]
[center newrun] [picked spotblue ] -> [center newrun testspotblue ] [picked spotblue ]
[center newrun] [picked spotgreen] -> [center newrun testspotgreen] [picked spotgreen]
[center newrun] [picked hstick   ] -> [center newrun testhstick   ] [picked hstick   ]
[center newrun] [picked vstick   ] -> [center newrun testvstick   ] [picked vstick   ]
(this should stack with all the above)
[center newrun] [picked wood     ] -> [center newrun testwood     ] [picked wood     ]
[center newrun] [picked stone    ] -> [center newrun teststone    ] [picked stone    ]
[center newrun] [picked glue     ] -> [center newrun testglue     ] [picked glue     ]

(mark collision find type on original tile pos)
[center newrun] [picked vdia      ] -> [center newrun] [picked vdia hfind between] 
[center newrun] [picked hdia      ] -> [center newrun] [picked hdia vfind between]
[center newrun] [picked no diaquad] -> [center newrun] [picked bfind]

(move to middle and count)
up    [ldq picked | ] -> [ldq un | picked] 
down  [ruq picked | ] -> [ruq dn | picked] 
left  [rdq picked | ] -> [rdq ln | picked] 
right [luq picked | ] -> [luq rn | picked] 

up    [dline picked | ] -> [dline un | picked] 
down  [uline picked | ] -> [uline dn | picked] 
left  [rline picked | ] -> [rline ln | picked] 
right [lline picked | ] -> [lline rn | picked] 

(NEW TILE from middle, not during unfinished moving)
[center newrun picked] -> [center newrun newtile] 

(move to position based on count)
random [un] [newtile]  -> [once] [newtile]
 left  [clockdir  ] [once] [newtile | ] -> [clockdir  ] [] [| newtile]
 right [counterdir] [once] [newtile | ] -> [counterdir] [] [| newtile]
random [dn] [newtile]  -> [once] [newtile] 
 right [clockdir  ] [once] [newtile | ] -> [clockdir  ] [] [| newtile]
 left  [counterdir] [once] [newtile | ] -> [counterdir] [] [| newtile]
random [rn] [newtile]  -> [once] [newtile] 
 up    [clockdir  ] [once] [newtile | ] -> [clockdir  ] [] [| newtile]
 down  [counterdir] [once] [newtile | ] -> [counterdir] [] [| newtile]
random [ln] [newtile]  -> [once] [newtile] 
 down  [clockdir  ] [once] [newtile | ] -> [clockdir  ] [] [| newtile]
 up    [counterdir] [once] [newtile | ] -> [counterdir] [] [| newtile]

(re-add keepgoing only if not done - directions left)
[center] -> [center newrun]
[newmove] [newrun] -> [newmove] []

(collision find type in final position)
[center newrun] [newtile vdia] ->       [center newrun] [newtile vdia hfind between]
[center newrun] [newtile hdia] ->       [center newrun] [newtile hdia vfind between]
[center newrun] [newtile no diaquad] -> [center newrun] [newtile bfind]

(find overlap)
horizontal [center newrun] [hfind | ] -> [center newrun] [hfind | hfind]
vertical   [center newrun] [vfind | ] -> [center newrun] [vfind | vfind]
[center newrun] [ldq vfind hfind] -> [center newrun] [ldq vfind hfind ucheck rcheck]
[center newrun] [luq vfind hfind] -> [center newrun] [luq vfind hfind dcheck rcheck]
[center newrun] [rdq vfind hfind] -> [center newrun] [rdq vfind hfind ucheck lcheck]
[center newrun] [ruq vfind hfind] -> [center newrun] [ruq vfind hfind dcheck lcheck]

(expand area that needs to be checked)
up    [ucheck | no between] -> [ucheck | ucheck]
down  [dcheck | no between] -> [dcheck | dcheck]
left  [lcheck | no between] -> [lcheck | lcheck]
right [rcheck | no between] -> [rcheck | rcheck]
[check] -> [checkhere]

(find between)
[bfind | | bfind] -> [bfind | checkhere | bfind]
[bfind | | ... | bfind] -> [bfind | checkhere | ... | bfind]

(done)
[center newrun] [between] -> [center newrun] []
[center newrun] [find]    -> [center newrun] []

(where will the new player, etc go?)
[center newrun testplayer   ] [newtile] -> [center newrun] [newtile testplayer   ]
[center newrun testpink     ] [newtile] -> [center newrun] [newtile testpink     ]
[center newrun testblue     ] [newtile] -> [center newrun] [newtile testblue     ]
[center newrun testgreen    ] [newtile] -> [center newrun] [newtile testgreen    ]
[center newrun testspotpink ] [newtile] -> [center newrun] [newtile testspotpink ]
[center newrun testspotblue ] [newtile] -> [center newrun] [newtile testspotblue ]
[center newrun testspotgreen] [newtile] -> [center newrun] [newtile testspotgreen]
[center newrun testbomb     ] [newtile] -> [center newrun] [newtile testbomb     ]
[center newrun testwall     ] [newtile] -> [center newrun] [newtile testwall     ]
[center newrun testvstick   ] [newtile] -> [center newrun] [newtile testhstick   ] (swap)
[center newrun testhstick   ] [newtile] -> [center newrun] [newtile testvstick   ] (swap)
(stack)   
[center newrun testwood     ] [newtile] -> [center newrun] [newtile testwood     ]
[center newrun teststone    ] [newtile] -> [center newrun] [newtile teststone    ]
[center newrun testglue     ] [newtile] -> [center newrun] [newtile testglue     ]

(done tiles ready to replace)
[center newrun] [newtile] -> [center newrun] [newdone]

endloop


(COLLISION=============================================================)

[center] [newdone norotate] -> [center collided] [newdone norotate overlap] sfx1

(tempcollision objects, are any left? then collision)
[checkhere no norotate] -> []
[checkhere rotate]   -> [rotate]
[center] [checkhere] -> [center collided] [overlap] sfx1

(spread crosses)
[center collided] -> [center collided cross] sfx1
[cross || ] -> [cross || cross]
(delete unneccesary)
[cross no overlap] -> []

(stop everything after collision)
[center collided] [newdone] -> [center collided] []
[center collided] [play]    -> [center collided] []
[center collided] [test]    -> [center collided] []
[center collided] [rotate]  -> [center collided] []

(PLACE==================================================================)

(delete old ground and things on it)
[rotate oldstuff] -> [rotate]

(move ground)
[newdone testwood ] -> [wood ]
[newdone teststone] -> [stone]
[newdone testglue ] -> [glue ]

(move floor player)
[center no collided] [player no rotate] -> [center] [lowplayer]

up    [uplay] [lowplayer || no obstacle] -> [uplay] [ || player]
down  [dplay] [lowplayer || no obstacle] -> [dplay] [ || player]
left  [lplay] [lowplayer || no obstacle] -> [lplay] [ || player]
right [rplay] [lowplayer || no obstacle] -> [rplay] [ || player]

up    [uplay] [lowplayer || obstacle] -> [uplay] [stationary player || obstacle] sfx1
down  [dplay] [lowplayer || obstacle] -> [dplay] [stationary player || obstacle] sfx1
left  [lplay] [lowplayer || obstacle] -> [lplay] [stationary player || obstacle] sfx1
right [rplay] [lowplayer || obstacle] -> [rplay] [stationary player || obstacle] sfx1

(move player and stuff)
[testplayer   ] -> [player   ]
[testpink     ] -> [boxpink  ]
[testblue     ] -> [boxblue  ]
[testgreen    ] -> [boxgreen ]
[testspotpink ] -> [spotpink ]
[testspotblue ] -> [spotblue ]
[testspotgreen] -> [spotgreen]
[testbomb     ] -> [bomb     ]
[testwall     ] -> [wall     ]
[testhstick   ] -> [hstick   ]
[testvstick   ] -> [vstick   ]

(done!)
[center no collided] -> [] sfx4

[collided] [tide] -> [collided] []
[remov] -> []


============================
( #### ###  #### #### #  # )
( #    #  # #    #    ## # )
( # ## ###  ###  ###  # ## )
( #  # #  # #    #    #  # )
( #### #  # #### #### #  # )
============================
(WIP)

(start at green active spot)
[rplay stonegreen] [local spotgreen] -> [rplay stonegreen] [local spotgreen rsnek prev]
[lplay stonegreen] [local spotgreen] -> [lplay stonegreen] [local spotgreen lsnek prev]
[uplay stonegreen] [local spotgreen] -> [uplay stonegreen] [local spotgreen usnek prev]
[dplay stonegreen] [local spotgreen] -> [dplay stonegreen] [local spotgreen dsnek prev]
(... or box)
[rplay woodgreen] [local boxgreen snekhead] -> [rplay woodgreen] [local boxgreen snekhead rsnek prev]
[lplay woodgreen] [local boxgreen snekhead] -> [lplay woodgreen] [local boxgreen snekhead lsnek prev]
[uplay woodgreen] [local boxgreen snekhead] -> [uplay woodgreen] [local boxgreen snekhead usnek prev]
[dplay woodgreen] [local boxgreen snekhead] -> [dplay woodgreen] [local boxgreen snekhead dsnek prev]

(check for collision)
up    [usnek || obstacle] -> [collided || obstacle cross] sfx1
down  [dsnek || obstacle] -> [collided || obstacle cross] sfx1
left  [lsnek || obstacle] -> [collided || obstacle cross] sfx1
right [rsnek || obstacle] -> [collided || obstacle cross] sfx1

(remember that the player is on floor and show possible spot)
up    [usnek] [player no floorgreen || ] -> [usnek] [lowplayer || testplayer]
down  [dsnek] [player no floorgreen || ] -> [dsnek] [lowplayer || testplayer]
left  [lsnek] [player no floorgreen || ] -> [lsnek] [lowplayer || testplayer]
right [rsnek] [player no floorgreen || ] -> [rsnek] [lowplayer || testplayer]

(move markers every tile)
startloop
up    [active no snekmov | snekmov prev] -> [active usnek prev | snekmov]
down  [active no snekmov | snekmov prev] -> [active dsnek prev | snekmov]
left  [active no snekmov | snekmov prev] -> [active lsnek prev | snekmov]
right [active no snekmov | snekmov prev] -> [active rsnek prev | snekmov]
endloop 

(add one more in front)
up    [snekhead usnek | no snekmov] -> [snekhead usnek | usnek]
down  [snekhead dsnek | no snekmov] -> [snekhead dsnek | dsnek]
left  [snekhead lsnek | no snekmov] -> [snekhead lsnek | lsnek]
right [snekhead rsnek | no snekmov] -> [snekhead rsnek | rsnek]

(place test parts)
up    [usnek player || ] -> [usnek || testplayer]
down  [dsnek player || ] -> [dsnek || testplayer]
left  [lsnek player || ] -> [lsnek || testplayer]
right [rsnek player || ] -> [rsnek || testplayer]

up    [usnek boxpink   || ] -> [usnek || testpink     ]
down  [dsnek boxpink   || ] -> [dsnek || testpink     ]
left  [lsnek boxpink   || ] -> [lsnek || testpink     ]
right [rsnek boxpink   || ] -> [rsnek || testpink     ]
up    [usnek boxblue   || ] -> [usnek || testblue     ]
down  [dsnek boxblue   || ] -> [dsnek || testblue     ]
left  [lsnek boxblue   || ] -> [lsnek || testblue     ]
right [rsnek boxblue   || ] -> [rsnek || testblue     ]
up    [usnek boxgreen  || ] -> [usnek || testgreen    ]
down  [dsnek boxgreen  || ] -> [dsnek || testgreen    ]
left  [lsnek boxgreen  || ] -> [lsnek || testgreen    ]
right [rsnek boxgreen  || ] -> [rsnek || testgreen    ]
up    [usnek bomb      || ] -> [usnek || testbomb     ]
down  [dsnek bomb      || ] -> [dsnek || testbomb     ]
left  [lsnek bomb      || ] -> [lsnek || testbomb     ]
right [rsnek bomb      || ] -> [rsnek || testbomb     ]
up    [usnek spotpink  || ] -> [usnek || testspotpink ]
down  [dsnek spotpink  || ] -> [dsnek || testspotpink ]
left  [lsnek spotpink  || ] -> [lsnek || testspotpink ]
right [rsnek spotpink  || ] -> [rsnek || testspotpink ]
up    [usnek spotblue  || ] -> [usnek || testspotblue ]
down  [dsnek spotblue  || ] -> [dsnek || testspotblue ]
left  [lsnek spotblue  || ] -> [lsnek || testspotblue ]
right [rsnek spotblue  || ] -> [rsnek || testspotblue ]
up    [usnek spotgreen || ] -> [usnek || testspotgreen]
down  [dsnek spotgreen || ] -> [dsnek || testspotgreen]
left  [lsnek spotgreen || ] -> [lsnek || testspotgreen]
right [rsnek spotgreen || ] -> [rsnek || testspotgreen]
up    [usnek hstick || no hsnek] -> [usnek || testhstick]
down  [dsnek hstick || no hsnek] -> [dsnek || testhstick]
left  [lsnek hstick || no vsnek] -> [lsnek || testhstick]
right [rsnek hstick || no vsnek] -> [rsnek || testhstick]
up    [usnek vstick || no hsnek] -> [usnek || testvstick]
down  [dsnek vstick || no hsnek] -> [dsnek || testvstick]
left  [lsnek vstick || no vsnek] -> [lsnek || testvstick]
right [rsnek vstick || no vsnek] -> [rsnek || testvstick]
up    [usnek hstick || hsnek] -> [usnek || hsnek testvstick]
down  [dsnek hstick || hsnek] -> [dsnek || hsnek testvstick]
left  [lsnek hstick || vsnek] -> [lsnek || vsnek testvstick]
right [rsnek hstick || vsnek] -> [rsnek || vsnek testvstick]
up    [usnek vstick || hsnek] -> [usnek || hsnek testhstick]
down  [dsnek vstick || hsnek] -> [dsnek || hsnek testhstick]
left  [lsnek vstick || vsnek] -> [lsnek || vsnek testhstick]
right [rsnek vstick || vsnek] -> [rsnek || vsnek testhstick]

(single move, these appear on off tiles)
up    [usnek wood  | ] -> [usnek | testwood ]
down  [dsnek wood  | ] -> [dsnek | testwood ]
left  [lsnek wood  | ] -> [lsnek | testwood ]
right [rsnek wood  | ] -> [rsnek | testwood ]
up    [usnek stone | ] -> [usnek | teststone]
down  [dsnek stone | ] -> [dsnek | teststone]
left  [lsnek stone | ] -> [lsnek | teststone]
right [rsnek stone | ] -> [rsnek | teststone]
up    [usnek glue  | ] -> [usnek | testglue ]
down  [dsnek glue  | ] -> [dsnek | testglue ]
left  [lsnek glue  | ] -> [lsnek | testglue ]
right [rsnek glue  | ] -> [rsnek | testglue ]
up    [usnek wall  | ] -> [usnek | testwall ]
down  [dsnek wall  | ] -> [dsnek | testwall ]
left  [lsnek wall  | ] -> [lsnek | testwall ]
right [rsnek wall  | ] -> [rsnek | testwall ]

(convert all back)
[snekmov] [active connected] -> [snekmov] []
(2nd move)
up    [usnek testwall teststone | ] -> [ | wall stone]
down  [dsnek testwall teststone | ] -> [ | wall stone]
left  [lsnek testwall teststone | ] -> [ | wall stone]
right [rsnek testwall teststone | ] -> [ | wall stone]
up    [usnek testwood  | ] -> [ | wood ]
down  [dsnek testwood  | ] -> [ | wood ]
left  [lsnek testwood  | ] -> [ | wood ]
right [rsnek testwood  | ] -> [ | wood ]
up    [usnek teststone | ] -> [ | stone]
down  [dsnek teststone | ] -> [ | stone]
left  [lsnek teststone | ] -> [ | stone]
right [rsnek teststone | ] -> [ | stone]
up    [usnek testglue  | ] -> [ | glue ]
down  [dsnek testglue  | ] -> [ | glue ]
left  [lsnek testglue  | ] -> [ | glue ]
right [rsnek testglue  | ] -> [ | glue ]
up    [usnek testwall  | ] -> [ | wall ]
down  [dsnek testwall  | ] -> [ | wall ]
left  [lsnek testwall  | ] -> [ | wall ]
right [rsnek testwall  | ] -> [ | wall ]

[lowplayer || testplayer obstacle] -> [player || obstacle]
[lowplayer] -> [] sfx1 (ALWAYS make a sound when pushing into side)

[testplayer   ] -> [player   ]
[testpink     ] -> [boxpink  ]
[testblue     ] -> [boxblue  ]
[testbomb     ] -> [bomb     ]
[testhstick   ] -> [hstick   ]
[testvstick   ] -> [vstick   ]
[testgreen    ] -> [boxgreen ] sfx5
[testspotpink ] -> [spotpink ]
[testspotblue ] -> [spotblue ]
[testspotgreen] -> [spotgreen] sfx5

[collided] [tide] -> [collided] []
[remov] -> []


========================
( ###  #### #   # ###  )
( # #  #  # ## ## # #  )
( #### #  # # # # #### )
( #  # #  # #   # #  # )
( #### #### #   # #### )
========================

(line)
horizontal [hcut || ] -> [hcut || hcut]
vertical   [vcut || ] -> [vcut || vcut]

(delete ground)
[connected cut] -> []

[remov] -> []

=======================
( #### #    #  # #### )
( #    #    #  # #    )
( #  # #    #  # ###  )
( #  # #    #  # #    )
( #### #### #### #### )
=======================

(remove unneeded)
[floor | glue | floor] -> [floor | testglue | floor]
[glue] -> []
[testglue] -> [glue]

[remov] -> []
[play]  -> []

[player   goalplayer] -> [goalwin] sfx2
[boxpink  goalpink  ] -> [goalwin] sfx2
[boxblue  goalblue  ] -> [goalwin] sfx2
[boxgreen goalgreen ] -> [goalwin] sfx2

====================================
( ###  #### ####  ###   ###  #   # )
( #  # #    #   # #  # #   # #   # )
( ###  ###  #   # ###  #   # # # # )
( #  # #    #   # #  # ##### ## ## )
( #  # #### ####  #  # #   # #   # )
====================================

[redraw] -> []

(Borders, corners etc)

(wood)
up   [wood | no wood] -> [wood | uwood]
left [wood | no wood] -> [wood | lwood]
down [wood | no wood] -> [wood | dwood]
right[wood | no wood] -> [wood | rwood]

up   [rwood | no wood] -> [rwood | ruwood]
up   [lwood | no wood] -> [lwood | luwood]
down [rwood | no wood] -> [rwood | rdwood]
down [lwood | no wood] -> [lwood | ldwood]

[rwood uwood] -> [rwood uwood iruwood]
[rwood dwood] -> [rwood dwood irdwood]
[lwood uwood] -> [lwood uwood iluwood]
[lwood dwood] -> [lwood dwood ildwood]

[uwood dwood rwood lwood] -> [uwood dwood rwood lwood fillwood]

(stone)
up   [stone | no stone] -> [stone | ustone]
left [stone | no stone] -> [stone | lstone]
down [stone | no stone] -> [stone | dstone]
right[stone | no stone] -> [stone | rstone]

up   [rstone | no stone] -> [rstone | rustone]
up   [lstone | no stone] -> [lstone | lustone]
down [rstone | no stone] -> [rstone | rdstone]
down [lstone | no stone] -> [lstone | ldstone]

[rstone ustone] -> [rstone ustone irustone]
[rstone dstone] -> [rstone dstone irdstone]
[lstone ustone] -> [lstone ustone ilustone]
[lstone dstone] -> [lstone dstone ildstone]

[ustone dstone rstone lstone] -> [ustone dstone rstone lstone fillstone]

(wall)
up   [wall | no wall] -> [wall tuwall| uwall]
left [wall | no wall] -> [wall tlwall| lwall]
down [wall | no wall] -> [wall tdwall| dwall]
right[wall | no wall] -> [wall trwall| rwall]
up   [rwall | no rwall no wall] -> [rwall | ruwall]
up   [lwall | no lwall no wall] -> [lwall | luwall]
down [rwall | no rwall no wall] -> [rwall | rdwall]
down [lwall | no lwall no wall] -> [lwall | ldwall]
[uwall ] -> [uwall  shwall]
[lwall ] -> [lwall  svwall]
[dwall ] -> [dwall  shwall]
[rwall ] -> [rwall  svwall]
[ruwall] -> [ruwall sruwall]
[luwall] -> [luwall sluwall]
[rdwall] -> [rdwall srdwall]
[ldwall] -> [ldwall sldwall]

[rwall uwall] -> [rwall uwall iruwall]
[rwall dwall] -> [rwall dwall irdwall]
[lwall uwall] -> [lwall uwall iluwall]
[lwall dwall] -> [lwall dwall ildwall]

[uwall dwall rwall lwall] -> [uwall dwall rwall lwall fillwall]

up   [tuwall | fillwall] -> [ | fillwall]
left [tlwall | fillwall] -> [ | fillwall]
down [tdwall | fillwall] -> [ | fillwall]
right[trwall | fillwall] -> [ | fillwall]

left [tuwall | wall no tuwall] -> [tuwall | wall truwall]
right[tuwall | wall no tuwall] -> [tuwall | wall tluwall]
left [tdwall | wall no tdwall] -> [tdwall | wall trdwall]
right[tdwall | wall no tdwall] -> [tdwall | wall tldwall]

(hole)
up   [hole | no hole] -> [hole | uhole]
left [hole | no hole] -> [hole | lhole]
down [hole | no hole] -> [hole | dhole]
right[hole | no hole] -> [hole | rhole]

(player)
up   [player | ] -> [player | uyel]
left [player | ] -> [player | lyel]
down [player | ] -> [player | dyel]
right[player | ] -> [player | ryel]

left [player no floor| ] -> [player | lwyel]
down [player no floor| ] -> [player | dwyel]
right[player no floor| ] -> [player | rwyel]

[player no floor] -> [player wplayer]

(boxes)
up   [boxpink | ] -> [boxpink | upink]
left [boxpink | ] -> [boxpink | lpink]
down [boxpink | ] -> [boxpink | dpink]
right[boxpink | ] -> [boxpink | rpink]

up   [boxblue | ] -> [boxblue | ublue]
left [boxblue | ] -> [boxblue | lblue]
down [boxblue | ] -> [boxblue | dblue]
right[boxblue | ] -> [boxblue | rblue]

up   [boxgreen | ] -> [boxgreen | ugreen]
left [boxgreen | ] -> [boxgreen | lgreen]
down [boxgreen | ] -> [boxgreen | dgreen]
right[boxgreen | ] -> [boxgreen | rgreen]

up   [bomb | ] -> [bomb | ubomb]
left [bomb | ] -> [bomb | lbomb]
down [bomb | ] -> [bomb | dbomb]
right[bomb | ] -> [bomb | rbomb]

up   [vstick | ] -> [vstick | ustick]
left [hstick | ] -> [hstick | lstick]
down [vstick | ] -> [vstick | dstick]
right[hstick | ] -> [hstick | rstick]

(goals)
up   [goalplayer | ] -> [goalplayer no face | uyel]
left [goalplayer | ] -> [goalplayer no face | lyel no lwyel]
down [goalplayer | ] -> [goalplayer no face | dyel no dwyel]
right[goalplayer | ] -> [goalplayer no face | ryel no rwyel]

up   [goalpink | ] -> [goalpink no boxpinkon | upink]
left [goalpink | ] -> [goalpink no boxpinkon | lpink]
down [goalpink | ] -> [goalpink no boxpinkon | dpink]
right[goalpink | ] -> [goalpink no boxpinkon | rpink]

up   [goalblue | ] -> [goalblue no boxblueon | ublue]
left [goalblue | ] -> [goalblue no boxblueon | lblue]
down [goalblue | ] -> [goalblue no boxblueon | dblue]
right[goalblue | ] -> [goalblue no boxblueon | rblue]

up   [goalgreen | ] -> [goalgreen no boxgreenon| ugreen]
left [goalgreen | ] -> [goalgreen no boxgreenon| lgreen]
down [goalgreen | ] -> [goalgreen no boxgreenon| dgreen]
right[goalgreen | ] -> [goalgreen no boxgreenon| rgreen]

(glue)
down [glue | no connected no obstacle] -> [glue | glueside]
vertical [glue | connected] -> [glue gluewide | connected]

(cross)
up   [cross | ] -> [cross | ucross]
left [cross | ] -> [cross | lcross]
down [cross | ] -> [cross | dcross]
right[cross | ] -> [cross | rcross]

(shadow & barrier)
[castshadow] -> [castshadow shadow]
[hidethis] -> [hidethis hide]

(wave)
[tide | ] -> [tide | tide]
[wave tide] -> []
[no wave tide] -> [wave]

(preparation: find out where snakeheads are (correct green placement))
[floor objgreen no snekhead | connected] ->             [floor objgreen snekhead | connected snekneck]
[floor objgreen snekhead    | connected no snekneck] -> [floor objgreen | connected]
[snekneck] -> []  


=========================================
( ###  #### ###    ###  ###  ####  ###  )
( #  # #    #  #  #   # #  # #    #   # )
( ###  ###  ###   #   # ###  ###  #   # )
( #    #    #  #  ##### #  # #    ##### )
( #    #### #  #  #   # #  # #### #   # )
=========================================

startloop
(select next shape)
random [floor no doneshape no selshape] -> [floor selshape]
[floor selshape | floor] -> [floor selshape | floor selshape]

(nosink)
[selshape wood || stone] -> [selshape wood nosink || stone]
[nosink || wood] -> [nosink || wood nosink]
[nosink | wood] -> [nosink | wood nosink]

(wood with color starting from one box, fill later)
random [selshape wood box] -> [selshape wood box onebox]
[onebox boxpink  wood] -> [onebox boxpink  wood woodpink ]
[onebox boxblue  wood] -> [onebox boxblue  wood woodblue ]
random [selshape onebox boxgreen no snekhead] [selshape boxgreen snekhead] -> [selshape boxgreen] [selshape boxgreen onebox snekhead]
[onebox boxgreen snekhead wood] -> [onebox boxgreen snekhead wood woodgreen]

(next)
[selshape] -> [doneshape]

endloop

[doneshape] -> []

(SPREAD ACTIVE AND LOCAL TILES)
(player)
[floor player] -> [floor player active local]
[connected active | connected] -> [connected active | connected active]
[floor local | floor] -> [floor local | floor local]

===========================================



(WOOD==================================================================)

startloop
(spread color)
[visibleg woodpink  | visibleg no box] -> [visibleg woodpink  | visibleg woodpink ]
[visibleg woodblue  | visibleg no box] -> [visibleg woodblue  | visibleg woodblue ]
[visibleg woodgreen | visibleg no box] -> [visibleg woodgreen | visibleg woodgreen]

(when multiple are allowed)
[visibleg woodpink  | visibleg boxpink ] -> [visibleg woodpink  | visibleg woodpink  boxpink ]
[visibleg woodgreen | visibleg boxgreen no snekhead] -> [visibleg woodgreen | visibleg woodgreen boxgreen]
endloop

(sinking wood)
[wood no nosink]         -> [wood sink] sfx9
[wood sink | castshadow] -> [wood sink | castshadow sink]
[nosink] -> []


(STONE==================================================================)

(spread color)
[stone spotpink ] -> [stone spotpink  stonepink]
[stone spotblue ] -> [stone spotblue  stoneblue]
[stone spotgreen] -> [stone spotgreen stonegreen]

[visibles stonepink  | visibles] -> [visibles stonepink  | visibles stonepink]
[visibles stoneblue  | visibles] -> [visibles stoneblue  | visibles stoneblue]
[visibles stonegreen | visibles] -> [visibles stonegreen | visibles stonegreen]


(DEAD OR ON===============================================================)

(start dead: wood boxes still without color? must be mixed or too many!)
[box wood no wcolor] -> [box wood wooddead]

(snake makes no sense!)
horizontal [connected | connected | connected] -> [connected | connected hsegment | connected]
vertical   [connected | connected | connected] -> [connected | connected vsegment | connected]
horizontal [connected | vsegment]  -> [connected | nosnake] 
vertical   [connected | hsegment]  -> [connected | nosnake] 
[segment] -> []
[nosnake | connected] -> [nosnake | connected nosnake]
[nosnake woodgreen]  -> [wooddead]
[nosnake stonegreen] -> [stonedead]

(start dead: bomb) (DO I WANT THIS?)
[bomb wood] -> [bomb wood wooddead]

(fill dead)
[wooddead | visibleg] -> [wooddead | visibleg wooddead]
[wooddead box] ->        [wooddead box boxdead]

[stonedead | visibles] -> [stonedead | visibles stonedead]
[stonedead spot] ->        [stonedead]

(remove stonedead after spots are gone)
[stonedead] -> []

(box indicators)
[boxpink  local woodpink] ->           [boxpink  local woodpink  boxpinkon]
[boxblue  local woodblue] ->           [boxblue  local woodblue  boxblueon]
[boxgreen local woodgreen snekhead] -> [boxgreen local woodgreen boxgreenon snekhead]
[bomb no wooddead] -> [bomb bombon]


(TEXTURE===============================================================)
(texture if no color)
vertical [no stone | stone no scolor | visibles | stone no scolor] -> [| stone | visibles tex1 | stone ]
vertical [tex1 | visibles | stone] -> [tex1 | visibles | stone tex1]
horizontal [no stone | stone no scolor | visibles | stone no scolor] -> [| stone | visibles tex3 | stone ]
horizontal [tex3 | visibles | stone] -> [tex3 | visibles | stone tex3]
[tex fillstone] -> [tex2 fillstone]
[tex swall] -> [swall]

("color correction")
[visibleg woodpink | iruwood] -> [visibleg woodpink | iruwood ruwoodpink]
[visibleg woodpink | iluwood] -> [visibleg woodpink | iluwood luwoodpink]
[visibleg woodpink | irdwood] -> [visibleg woodpink | irdwood rdwoodpink]
[visibleg woodpink | ildwood] -> [visibleg woodpink | ildwood ldwoodpink]
[visibleg woodblue | iruwood] -> [visibleg woodblue | iruwood ruwoodblue]
[visibleg woodblue | iluwood] -> [visibleg woodblue | iluwood luwoodblue]
[visibleg woodblue | irdwood] -> [visibleg woodblue | irdwood rdwoodblue]
[visibleg woodblue | ildwood] -> [visibleg woodblue | ildwood ldwoodblue]
[visibleg woodgreen | iruwood] -> [visibleg woodgreen | iruwood ruwoodgreen]
[visibleg woodgreen | iluwood] -> [visibleg woodgreen | iluwood luwoodgreen]
[visibleg woodgreen | irdwood] -> [visibleg woodgreen | irdwood rdwoodgreen]
[visibleg woodgreen | ildwood] -> [visibleg woodgreen | ildwood ldwoodgreen]

[visibles stonepink  | irustone] -> [visibles stonepink  | irustone rustonepink]
[visibles stonepink  | ilustone] -> [visibles stonepink  | ilustone lustonepink]
[visibles stonepink  | irdstone] -> [visibles stonepink  | irdstone rdstonepink]
[visibles stonepink  | ildstone] -> [visibles stonepink  | ildstone ldstonepink]
[visibles stoneblue  | irustone] -> [visibles stoneblue  | irustone rustoneblue]
[visibles stoneblue  | ilustone] -> [visibles stoneblue  | ilustone lustoneblue]
[visibles stoneblue  | irdstone] -> [visibles stoneblue  | irdstone rdstoneblue]
[visibles stoneblue  | ildstone] -> [visibles stoneblue  | ildstone ldstoneblue]
[visibles stonegreen | irustone] -> [visibles stonegreen | irustone rustonegreen]
[visibles stonegreen | ilustone] -> [visibles stonegreen | ilustone lustonegreen]
[visibles stonegreen | irdstone] -> [visibles stonegreen | irdstone rdstonegreen]
[visibles stonegreen | ildstone] -> [visibles stonegreen | ildstone ldstonegreen]



==============
WINCONDITIONS
==============

no goal
no boxdead
no sink
(no bomb ?)

=======     
LEVELS
=======

#################
#...............#
#.*.............#
#...............#
#...............#
#...............#
#...............#
#...............#
#...............#
#...............#
#...............#
#...............#
#...............#
#...............#
#.............h.#
#...............#
#################

(first)
#################
#...............#
#.*sssddddddddd.#
#.s.s.d.s.s.s.d.#
#.ssssdsssssssd.#
#.............d.#
#...ggm.......d.#
#...g.g.......d.#
#...ggg.......d.#
#.............d.#
#...........f.d.#
#.............d.#
#.ddd.......h.d.#
#.d.d.........d.#
#.ddddddddddddd.#
#...............#
#################

(beginner)
#################
#...............#
#.*sssddddddddd.#
#.....d.s.s.s.d.#
#.ggg.dsssssssd.#
#.g.g.........d.#
#.ggggm.......d.#
#.g.g.........d.#
#.ggg...ggggg.d.#
#.............d.#
#.....g.....f.d.#
#.....g.......d.#
#.ddd.g.....h.d.#
#.d.d.........d.#
#.ddddddddddddd.#
#...............#
#################

(harder)
#################
#...............#
#.*sssddddddddd.#
#.s.s.d.s.s.s.d.#
#.ssssdsssssssd.#
#.............d.#
#.ggggm.......d.#
#.............d.#
#.......ggggg.d.#
#.............d.#
#.....g.....f.d.#
#.....g.......d.#
#.ddd.g.....h.d.#
#.d.d.........d.#
#.ddddddddddddd.#
#...............#
#################

#####################
#...................#
#.ddddddddddddddddd.#
#.d.s.s.s.d.......d.#
#.dsssssssd.......d.#
#.d.s.s.s.s.......d.#
#.dsss*ssss.ggmgg.d.#
#.d.s.s.s.s.......d.#
#.dsssssssd.......d.#
#.d.s.s.s.d.......d.#
#.dddsssdddsssssssd.#
#.d...............d.#
#.d...g.......f...d.#
#.d...g...........d.#
#.d...g.......h...d.#
#.d...............d.#
#.ddddddddddddddddd.#
#...................#
#####################

#####################
#...................#
#.ddddddddddddddddd.#
#.d.s.s.s.d.......d.#
#.dsssssssd.....f.d.#
#.d.s...s.d.......d.#
#.dss.m.ssd.......d.#
#.d.s...s.d.......d.#
#.dsssssssd.......d.#
#.d.s.s.s.s.......d.#
#.dssssssss.ggggg.d.#
#.d.s.s.s.s.......d.#
#.dsssssssd.......d.#
#.d.s.s.s.d.......d.#
#.dsss*sssd.......d.#
#.d.s.s.s.d.......d.#
#.dsssssssdsssssssd.#
#.d.s.s.s.d.s.s.s.d.#
#.ddddddddddddddddd.#
#...................#
#####################

#####################
#...................#
#.ddddddddddddddddd.#
#.d.s.s...........d.#
#.ds*ss.ggg.......d.#
#.d.s.s.g.g.......d.#
#.dssss.mgg.......d.#
#.d.s.s...........d.#
#.ddddddddddd.....d.#
#.d...............d.#
#.d.......ggg.....d.#
#.d.......g.g.....d.#
#.d.......ggg.....d.#
#.d...............d.#
#.d.ggg...........d.#
#.d...g...........d.#
#.d...g.......d.f.d.#
#.d...........d...d.#
#.ddddddddddddddddd.#
#...................#
#####################

#####################
#...................#
#.ddddddddddddddddd.#
#.d.s.s...........d.#
#.ds*ss.mgg.......d.#
#.d.s.s.g.g.......d.#
#.dssss.ggg.......d.#
#.d.s.s...........d.#
#.ddddddddddd.....d.#
#.d...............d.#
#.d.......ggg.....d.#
#.d.......g.g.....d.#
#.d.......ggg.....d.#
#.d...............d.#
#.d.ggg...........d.#
#.d...g...........d.#
#.d...g.......d.f.d.#
#.d...........d...d.#
#.ddddddddddddddddd.#
#...................#
#####################

#####################
#...................#
#.ddddddddddddddddd.#
#...................#
#.....s.g.sss.g.xss.#
#.....s.g.s.s.g...s.#
#.ggg.s.g.sss.ggg.s.#
#.....s.g...s.....s.#
#.sssss.ggg.sss...s.#
#.s.s.......s.s...s.#
#.sss.ggggg.sss...s.#
#.s.s...g...s.s...s.#
#.sssss.g.sssss.g.s.#
#.s.s.s...s.s.s.g.s.#
#.sssssssssssss.g.s.#
#.s...s.s.........s.#
#.s.f.*ss.kgmgrgr.s.#
#.s...s.s.........s.#
#.sssssssssssssssss.#
#...................#
#####################

#####################
#...................#
#.ddddddddddddddddd.#
#...................#
#.sssssssssss.g.xss.#
#.s.s.s.s.s.s.g...s.#
#.sssssssssss.ggg.s.#
#.s.s.s.s.s.s.....s.#
#.sssssssssssssssss.#
#.s.s.s.s.s.s.s.s.s.#
#.ssssssss*ssssssss.#
#.s.s.s.s.s.s.s.s.s.#
#.sssssssssssssssss.#
#.s.s.s.s.s.s.s.s.s.#
#.sssssssssssssssss.#
#.s...s.s.........s.#
#.s.f.sss.kgmgrgn.s.#
#.s...s.s.........s.#
#.sssssssssssssssss.#
#...................#
#####################

message Box 1/3
#####################
#...................#
#.sssssssssssssssss.#
#.s...............s.#
#.s...............s.#
#.s...............s.#
#.s.......f.......s.#
#.s...............s.#
#.s...g.......m...s.#
#.s...g.......g...s.#
#.s...g.ss*ss.g...s.#
#.s...g.......g...s.#
#.s...g.......m...s.#
#.s...............s.#
#.s.......m.......s.#
#.s.......g.......s.#
#.s.......g.......s.#
#.s...............s.#
#.sssssssssssssssss.#
#...................#
#####################

message Box 2/3
#####################
#...................#
#.sssssssssssssssss.#
#.s...............s.#
#.s.......g.......s.#
#.s.......g.......s.#
#.s.....ggr...f...s.#
#.s...............s.#
#.s...g...........s.#
#.s...g...........s.#
#.s...g...*ss.g...s.#
#.s...g.......g...s.#
#.s...r.......r...s.#
#.s...............s.#
#.s...s.ggrgg.....s.#
#.s...............s.#
#.s...............s.#
#.s...............s.#
#.sssssssssssssssss.#
#...................#
#####################

message Box 3/3
#####################
#...................#
#.sssssssssssssssss.#
#.s...............s.#
#.s.............f.s.#
#.s...............s.#
#.s...............s.#
#.s...............s.#
#.s.....g.........s.#
#.s.....g.........s.#
#.s...ggn.*.......s.#
#.s...............s.#
#.s...............s.#
#.s...............s.#
#.s...............s.#
#.s...............s.#
#.s...............s.#
#.s...............s.#
#.sssssssssssssssss.#
#...................#
#####################

message glue test 1/3
#####################
#...................#
#...................#
#...................#
#.......f...........#
#...................#
#.......s...........#
#.......c...........#
#...s.ggrgg.ssss*...#
#...s...............#
#...s...............#
#...s...............#
#...s.g.............#
#...s.g.............#
#...s.m.............#
#...................#
#...................#
#...................#
#####################

message glue test 2/3
#####################
#...................#
#...................#
#...................#
#...................#
#...................#
#...................#
#...................#
#...s.scrgg...g.*...#
#...s...c.....g.....#
#...s...s...f.m.....#
#...s...............#
#...s.m.............#
#...s.g.............#
#...s.g.............#
#...................#
#...................#
#...................#
#####################

message glue test 3/3
message not a really thinky level, prob has lots of solutions
#####################
#...................#
#...................#
#...................#
#...................#
#...................#
#.......m.....g.....#
#.......c.....g.....#
#...s.scrgg...g.*...#
#...s...c.....g.....#
#...s...s.....n.....#
#...s...............#
#...s.t.......h.....#
#...s.s.............#
#...s.s.............#
#...................#
#...................#
#...................#
#####################

message Okay, that's it, more random levels after this.


